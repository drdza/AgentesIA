{"request_id": "081999fe-3d5f-4454-8ccf-9edcbf6cee53", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:13:25.178630", "status": "fails", "original_question": "Dime cuales servicios se han atendido con menor recurrencia en el año 2025", "enhanced_question": "¿Podrías decirme cuáles servicios se han atendido menos veces en el año 2025?  \n", "flow": "1. Filtrar los registros de servicios atendidos en el año 2025.\n2. Calcular la cantidad de veces que cada servicio ha sido atendido en el año 2025.\n3. Ordenar los servicios por la cantidad de atenciones en orden descendente.\n4. Seleccionar los primeros 8 servicios de la lista ordenada.\n5. Filtrar los servicios seleccionados para los que la cantidad de atenciones sea menor a la media de atenciones de todos los servicios atendidos en el año 2025.\n6. Ordenar los servicios filtrados por la cantidad de atenciones en orden ascendente.\n7. Seleccionar los primeros 3 servicios de la lista ordenada.\n8. Devolver los nombres de los servicios seleccionados.", "generated_sql": "SELECT\n  servicio\nFROM (\n  SELECT\n    servicio,\n    COUNT(*) AS cantidad_atenciones,\n    ROW_NUMBER() OVER (ORDER BY cantidad_atenciones DESC) AS row_num\n  FROM ft_tickets_ia\n  WHERE\n    anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n  GROUP BY\n    servicio\n) AS subquery\nWHERE\n  row_num <= 8\n  AND cantidad_atenciones < (\n    SELECT\n      AVG(cantidad_atenciones)\n    FROM (\n      SELECT\n        servicio,\n        COUNT(*) AS cantidad_atenciones\n      FROM ft_tickets_ia\n      WHERE\n        anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n      GROUP BY\n        servicio\n    ) AS subquery2\n  )\nORDER BY\n  cantidad_atenciones ASC\nLIMIT 3", "result": {"error": "no existe la columna «cantidad_atenciones»\nLINE 7:     ROW_NUMBER() OVER (ORDER BY cantidad_atenciones DESC) AS...\n                                        ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 29.3, "tags": []}
{"request_id": "c623e164-b272-43f6-aff5-a5116e13662c", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:14:52.529957", "status": "fails", "original_question": "Dime cuales servicios se han atendido con menor recurrencia en el año 2025", "enhanced_question": "¿Podrías decirme cuáles servicios se han atendido menos veces en el año 2025?  \n", "flow": "1. Filtrar los registros de servicios atendidos en el año 2025.\n2. Calcular la cantidad de veces que cada servicio ha sido atendido en el año 2025.\n3. Ordenar los servicios por la cantidad de atenciones en orden descendente.\n4. Seleccionar los primeros 8 servicios de la lista ordenada.\n5. Filtrar los servicios seleccionados para los que la cantidad de atenciones sea menor a la media de atenciones de todos los servicios atendidos en el año 2025.\n6. Ordenar los servicios filtrados por la cantidad de atenciones en orden ascendente.\n7. Seleccionar los primeros 3 servicios de la lista ordenada.\n8. Devolver los nombres de los servicios seleccionados.", "generated_sql": "SELECT\n  servicio\nFROM (\n  SELECT\n    servicio,\n    COUNT(*) AS cantidad_atenciones,\n    ROW_NUMBER() OVER (ORDER BY cantidad_atenciones DESC) AS row_num\n  FROM ft_tickets_ia\n  WHERE\n    anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n  GROUP BY\n    servicio\n) AS subquery\nWHERE\n  row_num <= 8\n  AND cantidad_atenciones < (\n    SELECT\n      AVG(cantidad_atenciones)\n    FROM (\n      SELECT\n        servicio,\n        COUNT(*) AS cantidad_atenciones\n      FROM ft_tickets_ia\n      WHERE\n        anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n      GROUP BY\n        servicio\n    ) AS subquery2\n  )\nORDER BY\n  cantidad_atenciones ASC\nLIMIT 3", "result": {"error": "no existe la columna «cantidad_atenciones»\nLINE 7:     ROW_NUMBER() OVER (ORDER BY cantidad_atenciones DESC) AS...\n                                        ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 29.27, "tags": []}
{"request_id": "340a9374-fdf8-4706-a55d-d7de350906a7", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:19:07.723562", "status": "fails", "original_question": "¿Cuales servicios se han atendido con menor frecuencia en el 2025?", "enhanced_question": "¿Podrías decirme cuáles servicios se han atendido menos veces en el año 2025?  \n", "flow": "1. Filtrar los registros de servicios atendidos en el año 2025.\n2. Calcular la cantidad de veces que cada servicio ha sido atendido en el año 2025.\n3. Ordenar los servicios por la cantidad de atenciones en orden descendente.\n4. Seleccionar los primeros 8 servicios de la lista ordenada.\n5. Filtrar los servicios seleccionados para los que la cantidad de atenciones sea menor a la media de atenciones de todos los servicios atendidos en el año 2025.\n6. Ordenar los servicios filtrados por la cantidad de atenciones en orden ascendente.\n7. Seleccionar los primeros 3 servicios de la lista ordenada.\n8. Devolver los nombres de los servicios seleccionados.", "generated_sql": "SELECT\n  servicio\nFROM (\n  SELECT\n    servicio,\n    COUNT(*) AS cantidad_atenciones,\n    AVG(cantidad_atenciones) OVER () AS media_atenciones\n  FROM (\n    SELECT\n      servicio,\n      COUNT(*) AS cantidad_atenciones\n    FROM ft_tickets_ia\n    WHERE\n      anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n    GROUP BY\n      servicio\n  ) AS subquery\n) AS subquery2\nWHERE\n  cantidad_atenciones < media_atenciones\nORDER BY\n  cantidad_atenciones ASC\nLIMIT 3", "result": {"error": "la columna «subquery.servicio» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación\nLINE 5:     servicio,\n            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 29.84, "tags": []}
{"request_id": "0ae8eb29-622a-4cc1-80cf-796430c16387", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:20:37.852443", "status": "fails", "original_question": "¿Cuales servicios se han atendido con menor frecuencia en el 2025?", "enhanced_question": "¿Podrías decirme cuáles servicios se han atendido menos veces en el año 2025?  \n", "flow": "1. Filtrar los registros de servicios atendidos en el año 2025.\n2. Calcular la cantidad de veces que cada servicio ha sido atendido en el año 2025.\n3. Ordenar los servicios por la cantidad de atenciones en orden descendente.\n4. Seleccionar los primeros 8 servicios de la lista ordenada.\n5. Filtrar los servicios seleccionados para los que la cantidad de atenciones sea menor a la media de atenciones de todos los servicios atendidos en el año 2025.\n6. Ordenar los servicios filtrados por la cantidad de atenciones en orden ascendente.\n7. Seleccionar los primeros 3 servicios de la lista ordenada.\n8. Devolver los nombres de los servicios seleccionados.", "generated_sql": "SELECT\n  servicio\nFROM (\n  SELECT\n    servicio,\n    COUNT(*) AS cantidad_atenciones,\n    AVG(cantidad_atenciones) OVER () AS media_atenciones\n  FROM (\n    SELECT\n      servicio,\n      COUNT(*) AS cantidad_atenciones\n    FROM ft_tickets_ia\n    WHERE\n      anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n    GROUP BY\n      servicio\n  ) AS subquery\n) AS subquery2\nWHERE\n  cantidad_atenciones < media_atenciones\nORDER BY\n  cantidad_atenciones ASC\nLIMIT 3", "result": {"error": "la columna «subquery.servicio» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación\nLINE 5:     servicio,\n            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 29.78, "tags": []}
{"request_id": "3f9b54d4-6065-455d-aa2b-e69bf8917d47", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:21:15.474838", "status": "fails", "original_question": "¿Cuales servicios se han atendido con menor frecuencia en el 2025?", "enhanced_question": "¿Podrías decirme cuáles servicios se han atendido menos veces en el año 2025?  \n", "flow": "1. Filtrar los registros de servicios atendidos en el año 2025.\n2. Calcular la cantidad de veces que cada servicio ha sido atendido en el año 2025.\n3. Ordenar los servicios por la cantidad de atenciones en orden descendente.\n4. Seleccionar los primeros 8 servicios de la lista ordenada.\n5. Filtrar los servicios seleccionados para los que la cantidad de atenciones sea menor a la media de atenciones de todos los servicios atendidos en el año 2025.\n6. Ordenar los servicios filtrados por la cantidad de atenciones en orden ascendente.\n7. Seleccionar los primeros 3 servicios de la lista ordenada.\n8. Devolver los nombres de los servicios seleccionados.", "generated_sql": "SELECT\n  servicio\nFROM (\n  SELECT\n    servicio,\n    COUNT(*) AS cantidad_atenciones,\n    AVG(cantidad_atenciones) OVER () AS media_atenciones\n  FROM (\n    SELECT\n      servicio,\n      COUNT(*) AS cantidad_atenciones\n    FROM ft_tickets_ia\n    WHERE\n      anio_registro = 2025 AND estatus_ticket = 'ATENDIDO'\n    GROUP BY\n      servicio\n  ) AS subquery\n) AS subquery2\nWHERE\n  cantidad_atenciones < media_atenciones\nORDER BY\n  cantidad_atenciones ASC\nLIMIT 3", "result": {"error": "la columna «subquery.servicio» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación\nLINE 5:     servicio,\n            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 29.76, "tags": []}
{"request_id": "4a19f1b8-3831-4873-b32e-d134f1d61162", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:24:36.411822", "status": "fails", "original_question": "¿Cuál es el sistema con mayor porcentaje de tickets atendiuos en menos de 24 horas? ", "enhanced_question": "", "flow": "", "generated_sql": "", "result": {"error": "❌ El SQL generado no pasó la validación sintáctica."}, "model": "mistral & gemma", "domain": "tickets", "duration": 0, "tags": []}
{"request_id": "7d3a8ce5-2633-47aa-8e07-3f73c3c93d1a", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:27:33.151307", "status": "fails", "original_question": "¿Cuál es el sistema con mayor porcentaje de tickets atendidos en menos de 24 horas? ", "enhanced_question": "¿Qué sistema tiene el porcentaje más alto de tickets que se atienden en menos de 24 horas? \n\n\n", "flow": "1. Filtrar los registros de tickets que han sido atendidos en menos de 24 horas.\n2. Calcular el porcentaje de tickets atendidos en menos de 24 horas para cada sistema.\n3. Agrupar los resultados por sistema.\n4. Ordenar los resultados por el porcentaje de tickets atendidos en menos de 24 horas en orden descendente.\n5. Seleccionar el primer registro de la lista ordenada (el sistema con el porcentaje más alto de tickets atendidos en menos de 24 horas).", "generated_sql": "SELECT\n  sistema,\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n    ),\n    2\n  ) AS porcentaje\nFROM ft_tickets_ia\nWHERE\n  NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\nGROUP BY\n  sistema\nORDER BY\n  porcentaje DESC\nLIMIT 1", "result": {"error": "error de sintaxis en o cerca de «HOURS»\nLINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n                                                                  ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 20.0, "tags": []}
{"request_id": "f44e0351-c32f-41e8-bfce-aa7b61ce0f23", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:28:03.059456", "status": "fails", "original_question": "¿Cuál es el sistema con mayor porcentaje de tickets atendidos en menos de 24 horas? ", "enhanced_question": "¿Qué sistema tiene el porcentaje más alto de tickets que se atienden en menos de 24 horas? \n\n\n", "flow": "1. Filtrar los registros de tickets que han sido atendidos en menos de 24 horas.\n2. Calcular el porcentaje de tickets atendidos en menos de 24 horas para cada sistema.\n3. Agrupar los resultados por sistema.\n4. Ordenar los resultados por el porcentaje de tickets atendidos en menos de 24 horas en orden descendente.\n5. Seleccionar el primer registro de la lista ordenada (el sistema con el porcentaje más alto de tickets atendidos en menos de 24 horas).", "generated_sql": "SELECT\n  sistema,\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n    ),\n    2\n  ) AS porcentaje\nFROM ft_tickets_ia\nWHERE\n  NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\nGROUP BY\n  sistema\nORDER BY\n  porcentaje DESC\nLIMIT 1", "result": {"error": "error de sintaxis en o cerca de «HOURS»\nLINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n                                                                  ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 20.09, "tags": []}
{"request_id": "a162e1cd-5e84-4f66-81ed-430504a6db2a", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:29:32.508304", "status": "fails", "original_question": "¿Cuál es el sistema con mayor porcentaje de tickets atendidos en menos de 24 horas? ", "enhanced_question": "¿Qué sistema tiene el porcentaje más alto de tickets que se atienden en menos de 24 horas? \n\n\n", "flow": "1. Filtrar los registros de tickets que han sido atendidos en menos de 24 horas.\n2. Calcular el porcentaje de tickets atendidos en menos de 24 horas para cada sistema.\n3. Agrupar los resultados por sistema.\n4. Ordenar los resultados por el porcentaje de tickets atendidos en menos de 24 horas en orden descendente.\n5. Seleccionar el primer registro de la lista ordenada (el sistema con el porcentaje más alto de tickets atendidos en menos de 24 horas).", "generated_sql": "SELECT\n  sistema,\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n    ),\n    2\n  ) AS porcentaje\nFROM ft_tickets_ia\nWHERE\n  NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\nGROUP BY\n  sistema\nORDER BY\n  porcentaje DESC\nLIMIT 1", "result": {"error": "error de sintaxis en o cerca de «HOURS»\nLINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n                                                                  ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 19.94, "tags": []}
{"request_id": "92098133-ab1d-4a2b-aaac-707ceacd3595", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T09:33:57.459525", "status": "fails", "original_question": "¿Cuál es el sistema con mayor porcentaje de tickets atendidos en menos de 24 horas? ", "enhanced_question": "¿Qué sistema tiene el porcentaje más alto de tickets que se atienden en menos de 24 horas? \n\n\n", "flow": "1. Filtrar los registros de tickets que han sido atendidos en menos de 24 horas.\n2. Calcular el porcentaje de tickets atendidos en menos de 24 horas para cada sistema.\n3. Agrupar los resultados por sistema.\n4. Ordenar los resultados por el porcentaje de tickets atendidos en menos de 24 horas en orden descendente.\n5. Seleccionar el primer registro de la lista ordenada (el sistema con el porcentaje más alto de tickets atendidos en menos de 24 horas).", "generated_sql": "SELECT\n  sistema,\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n    ),\n    2\n  ) AS porcentaje\nFROM ft_tickets_ia\nWHERE\n  NOT fecha_cierre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\nGROUP BY\n  sistema\nORDER BY\n  porcentaje DESC\nLIMIT 1", "result": {"error": "error de sintaxis en o cerca de «HOURS»\nLINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS\n                                                                  ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 20.0, "tags": []}
{"request_id": "38cc32e6-1209-485d-be2c-0c8606c65cfc", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T10:00:31.730996", "status": "fails", "original_question": "¿Cual es el porcentaje de tickets que se han atendido en menos de 3 días?", "enhanced_question": "¿Qué porcentaje de tickets se han resuelto en un plazo de menos de 3 días?  \n", "flow": "1. Filtrar los tickets que han sido resueltos.\n2. Calcular la fecha de cierre de cada ticket.\n3. Filtrar los tickets cuya diferencia entre la fecha de cierre y la fecha de creación sea menor a 3 días.\n4. Contar el número total de tickets filtrados.\n5. Contar el número total de todos los tickets resueltos.\n6. Calcular el porcentaje de tickets resueltos en menos de 3 días dividiendo el número de tickets filtrados por el número total de tickets resueltos.", "generated_sql": "WITH tickets_filtrados AS (\n  SELECT\n    ft_tickets_ia.*\n  FROM ft_tickets_ia\n  WHERE\n    ft_tickets_ia.estatus_ticket = 'ATENDIDO'\n    AND NOT ft_tickets_ia.fecha_cierre IS NULL\n    AND (\n      ft_tickets_ia.fecha_cierre - ft_tickets_ia.fecha_registro\n    ) < INTERVAL '3' DAYS\n), tickets_totales AS (\n  SELECT\n    COUNT(*) AS total_tickets\n  FROM ft_tickets_ia\n  WHERE\n    ft_tickets_ia.estatus_ticket = 'ATENDIDO'\n)\nSELECT\n  (\n    CAST(tickets_filtrados.total_tickets AS FLOAT) / tickets_totales.total_tickets\n  ) * 100 AS porcentaje\nFROM tickets_filtrados, tickets_totales", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 10:     ) < INTERVAL '3' DAYS\n                              ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 18.63, "tags": []}
{"request_id": "c192fda4-45d0-4c4c-b102-8bc0f0e70062", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T10:01:26.418640", "status": "fails", "original_question": "¿Cual es el porcentaje de tickets que se han atendido en mas de 3 días?", "enhanced_question": "¿Qué porcentaje de tickets han tardado más de tres días en ser atendidos?  \n", "flow": "1. Filtrar los registros de tickets que han sido atendidos.\n2. Calcular la diferencia entre la fecha de atención y la fecha de registro para cada ticket.\n3. Agrupar los tickets por la diferencia de días.\n4. Contar el número total de tickets en cada grupo.\n5. Filtrar los grupos donde la diferencia de días es mayor a tres.\n6. Calcular el porcentaje de tickets en los grupos filtrados respecto al total de tickets atendidos.", "generated_sql": "SELECT\n  (\n    CAST(SUM(CASE WHEN DATEDIFF('day', fecha_registro, FECHA_CIERRE) > 3 THEN 1 ELSE 0 END) AS FLOAT) / CAST(COUNT(*) AS FLOAT)\n  ) * 100 AS porcentaje\nFROM ft_tickets_ia\nWHERE\n  estatus_ticket = 'ATENDIDO'", "result": {"error": "no existe la función datediff(unknown, date, date)\nLINE 3:     CAST(SUM(CASE WHEN DATEDIFF('day', fecha_registro, FECHA...\n                               ^\nHINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 21.59, "tags": []}
{"request_id": "2e691c03-964a-47af-8dd8-bf1045233dff", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T10:02:51.979701", "status": "fails", "original_question": "¿Cual es el porcentaje de tickets que se han atendido en menos de 3 días?", "enhanced_question": "¿Qué porcentaje de tickets se han resuelto en un plazo de menos de 3 días?  \n", "flow": "1. Filtrar los tickets que han sido resueltos.\n2. Calcular la fecha de cierre de cada ticket.\n3. Filtrar los tickets cuya diferencia entre la fecha de cierre y la fecha de creación sea menor a 3 días.\n4. Contar el número total de tickets filtrados.\n5. Contar el número total de todos los tickets resueltos.\n6. Calcular el porcentaje de tickets resueltos en menos de 3 días dividiendo el número de tickets filtrados por el número total de tickets resueltos.", "generated_sql": "WITH tickets_filtrados AS (\n  SELECT\n    ft_tickets_ia.*\n  FROM ft_tickets_ia\n  WHERE\n    ft_tickets_ia.estatus_ticket = 'ATENDIDO'\n    AND NOT ft_tickets_ia.fecha_cierre IS NULL\n    AND (\n      ft_tickets_ia.fecha_cierre - ft_tickets_ia.fecha_registro\n    ) < INTERVAL '3' DAYS\n), tickets_totales AS (\n  SELECT\n    COUNT(*) AS total_tickets\n  FROM ft_tickets_ia\n  WHERE\n    ft_tickets_ia.estatus_ticket = 'ATENDIDO'\n)\nSELECT\n  (\n    CAST(tickets_filtrados.total_tickets AS FLOAT) / tickets_totales.total_tickets\n  ) * 100 AS porcentaje\nFROM tickets_filtrados, tickets_totales", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 10:     ) < INTERVAL '3' DAYS\n                              ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 18.58, "tags": []}
{"request_id": "be8f15c6-a8de-442d-8d2d-8bb6e22ad1fa", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T10:08:25.259487", "status": "fails", "original_question": "¿Cual es el porcentaje de tickets que se han atendido en menos de 3 días?", "enhanced_question": "¿Qué porcentaje de tickets se han resuelto en un plazo de menos de 3 días?  \n", "flow": "1. Filtrar los tickets que han sido resueltos.\n2. Calcular la fecha de cierre de cada ticket.\n3. Filtrar los tickets cuya diferencia entre la fecha de cierre y la fecha de creación sea menor a 3 días.\n4. Contar el número total de tickets filtrados.\n5. Contar el número total de todos los tickets resueltos.\n6. Calcular el porcentaje de tickets resueltos en menos de 3 días dividiendo el número de tickets filtrados por el número total de tickets resueltos.", "generated_sql": "WITH tickets_filtrados AS (\n  SELECT\n    ft_tickets_ia.*\n  FROM ft_tickets_ia\n  WHERE\n    ft_tickets_ia.estatus_ticket = 'ATENDIDO'\n    AND NOT ft_tickets_ia.fecha_cierre IS NULL\n    AND (\n      ft_tickets_ia.fecha_cierre - ft_tickets_ia.fecha_registro\n    ) < INTERVAL '3' DAYS\n), tickets_totales AS (\n  SELECT\n    COUNT(*) AS total_tickets\n  FROM ft_tickets_ia\n  WHERE\n    ft_tickets_ia.estatus_ticket = 'ATENDIDO'\n)\nSELECT\n  (\n    CAST(tickets_filtrados.total_tickets AS FLOAT) / tickets_totales.total_tickets\n  ) * 100 AS porcentaje\nFROM tickets_filtrados, tickets_totales", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 10:     ) < INTERVAL '3' DAYS\n                              ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 18.55, "tags": []}
{"request_id": "f4471aa2-0027-474f-932b-2da0838170d5", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T12:50:44.106217", "status": "fails", "original_question": "Dime cual es el departamento y área con el peor tiempo de atención de tickets en el 2025?", "enhanced_question": "¿Podrías decirme cuál departamento y área tienen el peor tiempo promedio de atención de tickets durante el año 2025?  \n", "flow": "1. Filtrar los registros de tickets por el año 2025.\n2. Calcular el tiempo de atención de cada ticket.\n3. Agrupar los registros por departamento y área.\n4. Calcular el promedio de tiempo de atención para cada grupo (departamento y área).\n5. Ordenar los grupos por el tiempo promedio de atención en orden descendente.\n6. Seleccionar los dos grupos (departamento y área) con el tiempo promedio de atención más alto.\n7. Seleccionar el departamento correspondiente al grupo con el tiempo promedio de atención más alto.\n8. Seleccionar la área correspondiente al grupo con el tiempo promedio de atención más alto.", "generated_sql": "WITH tiempo_atencion AS (\n  SELECT\n    departamento_colaborador_asignado,\n    area_colaborador_asignado,\n    AVG(tiempo_solucion_total) AS promedio_tiempo_atencion\n  FROM ft_tickets_ia\n  WHERE\n    anio_registro = 2025\n  GROUP BY\n    departamento_colaborador_asignado,\n    area_colaborador_asignado\n), mejor_tiempo AS (\n  SELECT\n    departamento_colaborador_asignado,\n    area_colaborador_asignado,\n    promedio_tiempo_atencion\n  FROM tiempo_atencion\n  ORDER BY\n    promedio_tiempo_atencion ASC\n  LIMIT 2\n)\nSELECT\n  departamento_colaborador_asignado,\n  area_colaborador_asignado\nFROM mejor_tiempo\nWHERE\n  ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) = 2", "result": {"error": "no se permiten funciones de ventana deslizante en WHERE\nLINE 27:   ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) ...\n           ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 26.25, "tags": []}
{"request_id": "82d402ea-985c-46e5-a648-2981eab6af55", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T12:51:22.615987", "status": "fails", "original_question": "Dime cual es el departamento y área con el peor tiempo de atención de tickets en el 2025?", "enhanced_question": "¿Podrías decirme cuál departamento y área tienen el peor tiempo promedio de atención de tickets durante el año 2025?  \n", "flow": "1. Filtrar los registros de tickets por el año 2025.\n2. Calcular el tiempo de atención de cada ticket.\n3. Agrupar los registros por departamento y área.\n4. Calcular el promedio de tiempo de atención para cada grupo (departamento y área).\n5. Ordenar los grupos por el tiempo promedio de atención en orden descendente.\n6. Seleccionar los dos grupos (departamento y área) con el tiempo promedio de atención más alto.\n7. Seleccionar el departamento correspondiente al grupo con el tiempo promedio de atención más alto.\n8. Seleccionar la área correspondiente al grupo con el tiempo promedio de atención más alto.", "generated_sql": "WITH tiempo_atencion AS (\n  SELECT\n    departamento_colaborador_asignado,\n    area_colaborador_asignado,\n    AVG(tiempo_solucion_total) AS promedio_tiempo_atencion\n  FROM ft_tickets_ia\n  WHERE\n    anio_registro = 2025\n  GROUP BY\n    departamento_colaborador_asignado,\n    area_colaborador_asignado\n), mejor_tiempo AS (\n  SELECT\n    departamento_colaborador_asignado,\n    area_colaborador_asignado,\n    promedio_tiempo_atencion\n  FROM tiempo_atencion\n  ORDER BY\n    promedio_tiempo_atencion ASC\n  LIMIT 2\n)\nSELECT\n  departamento_colaborador_asignado,\n  area_colaborador_asignado\nFROM mejor_tiempo\nWHERE\n  ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) = 2", "result": {"error": "no se permiten funciones de ventana deslizante en WHERE\nLINE 27:   ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) ...\n           ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 26.19, "tags": []}
{"request_id": "3e9f81c1-e6fc-4c78-9ab3-6dcd2fa8e71c", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T12:52:52.473025", "status": "fails", "original_question": "Dime cual es el departamento y área con el peor tiempo de atención de tickets en el 2025?", "enhanced_question": "¿Podrías decirme cuál departamento y área tienen el peor tiempo promedio de atención de tickets durante el año 2025?  \n", "flow": "1. Filtrar los registros de tickets por el año 2025.\n2. Calcular el tiempo de atención de cada ticket.\n3. Agrupar los registros por departamento y área.\n4. Calcular el promedio de tiempo de atención para cada grupo (departamento y área).\n5. Ordenar los grupos por el tiempo promedio de atención en orden descendente.\n6. Seleccionar los dos grupos (departamento y área) con el tiempo promedio de atención más alto.\n7. Seleccionar el departamento correspondiente al grupo con el tiempo promedio de atención más alto.\n8. Seleccionar la área correspondiente al grupo con el tiempo promedio de atención más alto.", "generated_sql": "WITH tiempo_atencion AS (\n  SELECT\n    departamento_colaborador_asignado,\n    area_colaborador_asignado,\n    AVG(tiempo_solucion_total) AS promedio_tiempo_atencion\n  FROM ft_tickets_ia\n  WHERE\n    anio_registro = 2025\n  GROUP BY\n    departamento_colaborador_asignado,\n    area_colaborador_asignado\n), mejor_tiempo AS (\n  SELECT\n    departamento_colaborador_asignado,\n    area_colaborador_asignado,\n    promedio_tiempo_atencion\n  FROM tiempo_atencion\n  ORDER BY\n    promedio_tiempo_atencion ASC\n  LIMIT 2\n)\nSELECT\n  departamento_colaborador_asignado,\n  area_colaborador_asignado\nFROM mejor_tiempo\nWHERE\n  ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) = 2", "result": {"error": "no se permiten funciones de ventana deslizante en WHERE\nLINE 27:   ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) ...\n           ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 26.26, "tags": []}
{"request_id": "ee7d7139-7385-408d-b2f5-6e46a58fb416", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:09:37.141175", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_cierre - fecha_registro AS tiempo_atencion,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    fecha_cierre - fecha_registro\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    tiempo_atencion\n  FROM tickets_en_proceso\n  WHERE\n    tiempo_atencion > INTERVAL '3' DAYS\n)\nSELECT\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        estatus_ticket = 'EN PROCESO'\n    ),\n    2\n  ) AS porcentaje\nFROM tickets_fuera_de_tiempo", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 15:     tiempo_atencion > INTERVAL '3' DAYS\n                                            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 13.61, "tags": []}
{"request_id": "cb87f5be-3d24-46b0-95d4-263fbc2f9b96", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:15:35.059202", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_cierre - fecha_registro AS tiempo_atencion,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    fecha_cierre - fecha_registro\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    tiempo_atencion\n  FROM tickets_en_proceso\n  WHERE\n    tiempo_atencion > INTERVAL '3' DAYS\n)\nSELECT\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        estatus_ticket = 'EN PROCESO'\n    ),\n    2\n  ) AS porcentaje\nFROM tickets_fuera_de_tiempo", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 15:     tiempo_atencion > INTERVAL '3' DAYS\n                                            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 13.61, "tags": []}
{"request_id": "76c61391-5a9b-4574-a4e7-d9e895b13737", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:16:42.511017", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_cierre - fecha_registro AS tiempo_atencion,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    fecha_cierre - fecha_registro\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    tiempo_atencion\n  FROM tickets_en_proceso\n  WHERE\n    tiempo_atencion > INTERVAL '3' DAYS\n)\nSELECT\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        estatus_ticket = 'EN PROCESO'\n    ),\n    2\n  ) AS porcentaje\nFROM tickets_fuera_de_tiempo", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 15:     tiempo_atencion > INTERVAL '3' DAYS\n                                            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 13.61, "tags": []}
{"request_id": "455315fd-a37b-4088-b4c4-66a8f75814de", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:17:04.264752", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_cierre - fecha_registro AS tiempo_atencion,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    fecha_cierre - fecha_registro\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    tiempo_atencion\n  FROM tickets_en_proceso\n  WHERE\n    tiempo_atencion > INTERVAL '3' DAYS\n)\nSELECT\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        estatus_ticket = 'EN PROCESO'\n    ),\n    2\n  ) AS porcentaje\nFROM tickets_fuera_de_tiempo", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 15:     tiempo_atencion > INTERVAL '3' DAYS\n                                            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 13.61, "tags": []}
{"request_id": "977db909-8f8f-43cd-9253-2e0aebc87e66", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:17:55.886569", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_cierre - fecha_registro AS tiempo_atencion,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    fecha_cierre - fecha_registro\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    tiempo_atencion\n  FROM tickets_en_proceso\n  WHERE\n    tiempo_atencion > INTERVAL '3' DAYS\n)\nSELECT\n  ROUND(\n    COUNT(*) * 100.0 / (\n      SELECT\n        COUNT(*)\n      FROM ft_tickets_ia\n      WHERE\n        estatus_ticket = 'EN PROCESO'\n    ),\n    2\n  ) AS porcentaje\nFROM tickets_fuera_de_tiempo", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 15:     tiempo_atencion > INTERVAL '3' DAYS\n                                            ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 13.62, "tags": []}
{"request_id": "8970f295-76eb-4ee7-9bfe-33ee23aacfd7", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:29:55.123073", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "1. Filtrar los tickets que están en proceso.\n2. Calcular la fecha actual y la fecha de creación de cada ticket.\n3. Calcular la diferencia en días entre la fecha de creación y la fecha actual para cada ticket.\n4. Filtrar los tickets cuya diferencia en días exceda el tiempo de atención previsto.\n5. Contar el número total de tickets en proceso.\n6. Contar el número de tickets en proceso que han excedido su tiempo de atención previsto.\n7. Calcular el porcentaje de tickets en proceso que han excedido su tiempo de atención previsto dividiendo el número de tickets que han excedido por el total de tickets en proceso.", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_registro,\n    EXTRACT(EPOCH FROM (\n      CURRENT_DATE - fecha_registro\n    )) AS dias_transcurridos,\n    estatus_ticket,\n    tiempo_sla_servicio\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    *\n  FROM tickets_en_proceso\n  WHERE\n    dias_transcurridos > tiempo_sla_servicio\n)\nSELECT\n  COUNT(*) FILTER(WHERE\n    estatus_ticket = 'EN PROCESO') AS total_tickets_en_proceso,\n  COUNT(*) AS tickets_fuera_de_tiempo,\n  (\n    CAST(COUNT(*) FILTER(WHERE\n      estatus_ticket = 'EN PROCESO') AS FLOAT) / CAST(COUNT(*) AS FLOAT)\n  ) * 100 AS porcentaje_tickets_fuera_de_tiempo\nFROM ft_tickets_ia\nJOIN tickets_en_proceso\n  ON ft_tickets_ia.folio_ticket = tickets_en_proceso.folio_ticket\nJOIN tickets_fuera_de_tiempo\n  ON ft_tickets_ia.folio_ticket = tickets_fuera_de_tiempo.folio_ticket", "result": {"error": "no existe la función pg_catalog.extract(unknown, integer)\nLINE 4:     EXTRACT(EPOCH FROM (\n            ^\nHINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 23.66, "tags": []}
{"request_id": "bbf77c78-887e-4887-b5c6-8a55cc4aca5d", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:30:43.205871", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "1. Filtrar los tickets que están en proceso.\n2. Calcular la fecha actual y la fecha de creación de cada ticket.\n3. Calcular la diferencia en días entre la fecha de creación y la fecha actual para cada ticket.\n4. Filtrar los tickets cuya diferencia en días exceda el tiempo de atención previsto.\n5. Contar el número total de tickets en proceso.\n6. Contar el número de tickets en proceso que han excedido su tiempo de atención previsto.\n7. Calcular el porcentaje de tickets en proceso que han excedido su tiempo de atención previsto dividiendo el número de tickets que han excedido por el total de tickets en proceso.", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_registro,\n    EXTRACT(EPOCH FROM (\n      CURRENT_DATE - fecha_registro\n    )) AS dias_transcurridos,\n    estatus_ticket,\n    tiempo_sla_servicio\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    *\n  FROM tickets_en_proceso\n  WHERE\n    dias_transcurridos > tiempo_sla_servicio\n)\nSELECT\n  COUNT(*) FILTER(WHERE\n    estatus_ticket = 'EN PROCESO') AS total_tickets_en_proceso,\n  COUNT(*) AS tickets_fuera_de_tiempo,\n  (\n    CAST(COUNT(*) FILTER(WHERE\n      estatus_ticket = 'EN PROCESO') AS FLOAT) / CAST(COUNT(*) AS FLOAT)\n  ) * 100 AS porcentaje_tickets_fuera_de_tiempo\nFROM ft_tickets_ia\nJOIN tickets_en_proceso\n  ON ft_tickets_ia.folio_ticket = tickets_en_proceso.folio_ticket\nJOIN tickets_fuera_de_tiempo\n  ON ft_tickets_ia.folio_ticket = tickets_fuera_de_tiempo.folio_ticket", "result": {"error": "no existe la función pg_catalog.extract(unknown, integer)\nLINE 4:     EXTRACT(EPOCH FROM (\n            ^\nHINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 23.6, "tags": []}
{"request_id": "7c9f5d70-8783-4604-9088-f6acca5b6c39", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:31:29.408904", "status": "fails", "original_question": "De los tickets en proceso, dime ¿qué porcentaje está fuera de tiempo de atención?", "enhanced_question": "¿Qué porcentaje de los tickets que están en proceso han excedido su tiempo de atención previsto?  \n", "flow": "1. Filtrar los tickets que están en proceso.\n2. Calcular la fecha actual y la fecha de creación de cada ticket.\n3. Calcular la diferencia en días entre la fecha de creación y la fecha actual para cada ticket.\n4. Filtrar los tickets cuya diferencia en días exceda el tiempo de atención previsto.\n5. Contar el número total de tickets en proceso.\n6. Contar el número de tickets en proceso que han excedido su tiempo de atención previsto.\n7. Calcular el porcentaje de tickets en proceso que han excedido su tiempo de atención previsto dividiendo el número de tickets que han excedido por el total de tickets en proceso.", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    fecha_registro,\n    EXTRACT(EPOCH FROM (\n      CURRENT_DATE - fecha_registro\n    )) AS dias_transcurridos,\n    estatus_ticket,\n    tiempo_sla_servicio\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n), tickets_fuera_de_tiempo AS (\n  SELECT\n    *\n  FROM tickets_en_proceso\n  WHERE\n    dias_transcurridos > tiempo_sla_servicio\n)\nSELECT\n  COUNT(*) FILTER(WHERE\n    estatus_ticket = 'EN PROCESO') AS total_tickets_en_proceso,\n  COUNT(*) AS tickets_fuera_de_tiempo,\n  (\n    CAST(COUNT(*) FILTER(WHERE\n      estatus_ticket = 'EN PROCESO') AS FLOAT) / CAST(COUNT(*) AS FLOAT)\n  ) * 100 AS porcentaje_tickets_fuera_de_tiempo\nFROM ft_tickets_ia\nJOIN tickets_en_proceso\n  ON ft_tickets_ia.folio_ticket = tickets_en_proceso.folio_ticket\nJOIN tickets_fuera_de_tiempo\n  ON ft_tickets_ia.folio_ticket = tickets_fuera_de_tiempo.folio_ticket", "result": {"error": "no existe la función pg_catalog.extract(unknown, integer)\nLINE 4:     EXTRACT(EPOCH FROM (\n            ^\nHINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 23.67, "tags": []}
{"request_id": "0ab8ab54-6bce-4536-92e2-0dd8fe537faa", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T15:59:29.123676", "status": "fails", "original_question": "¿Cuantos tickets en proceso por departamento hay fuera de tiempo y que porcentaje representa de total de tickets con el mismo estatus?", "enhanced_question": "¿Cuántos tickets por departamento están fuera de tiempo y cuál es el porcentaje que representan del total de tickets con el mismo estatus? \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    departamento_colaborador_asignado AS departamento,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    departamento_colaborador_asignado\n), tickets_fuera_tiempo AS (\n  SELECT\n    departamento_colaborador_asignado AS departamento,\n    COUNT(*) AS tickets_fuera_tiempo\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO' AND tiempo_solucion_total > tiempo_sla_servicio\n  GROUP BY\n    departamento_colaborador_asignado\n)\nSELECT\n  departamento,\n  tickets_en_proceso,\n  tickets_fuera_tiempo,\n  tickets_fuera_tiempo * 100.0 / tickets_en_proceso AS porcentaje\nFROM tickets_en_proceso\nJOIN tickets_fuera_tiempo\n  ON tickets_en_proceso.departamento = tickets_fuera_tiempo.departamento\nORDER BY\n  porcentaje DESC", "result": {"error": "la referencia a la columna «departamento» es ambigua\nLINE 21:   departamento,\n           ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 19.58, "tags": []}
{"request_id": "7ff738d9-1fa9-4a80-97fc-cee347ca670e", "client_ip": "127.0.0.1", "timestamp": "2025-06-05T16:00:39.708098", "status": "fails", "original_question": "¿Cuantos tickets en proceso por departamento hay fuera de tiempo y que porcentaje representa de total de tickets con el mismo estatus?", "enhanced_question": "¿Cuántos tickets por departamento están fuera de tiempo y cuál es el porcentaje que representan del total de tickets con el mismo estatus? \n", "flow": "", "generated_sql": "WITH tickets_en_proceso AS (\n  SELECT\n    departamento_colaborador_asignado AS departamento,\n    COUNT(*) AS tickets_en_proceso\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO'\n  GROUP BY\n    departamento_colaborador_asignado\n), tickets_fuera_tiempo AS (\n  SELECT\n    departamento_colaborador_asignado AS departamento,\n    COUNT(*) AS tickets_fuera_tiempo\n  FROM ft_tickets_ia\n  WHERE\n    estatus_ticket = 'EN PROCESO' AND tiempo_solucion_total > tiempo_sla_servicio\n  GROUP BY\n    departamento_colaborador_asignado\n)\nSELECT\n  departamento,\n  tickets_en_proceso,\n  tickets_fuera_tiempo,\n  tickets_fuera_tiempo * 100.0 / tickets_en_proceso AS porcentaje\nFROM tickets_en_proceso\nJOIN tickets_fuera_tiempo\n  ON tickets_en_proceso.departamento = tickets_fuera_tiempo.departamento\nORDER BY\n  porcentaje DESC", "result": {"error": "la referencia a la columna «departamento» es ambigua\nLINE 21:   departamento,\n           ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 24.87, "tags": []}
