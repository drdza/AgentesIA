{"request_id": "3c0504d2-9cf7-4f7a-a6bc-0859a303728a", "client_ip": "127.0.0.1", "timestamp": "2025-06-02T15:16:27.976452", "status": "fails", "original_question": "Cuantos tickets se han generado en los ultimos 30 días?", "enhanced_question": "¿Cuántos tickets se han creado en los últimos 30 días? \n", "flow": "1. Filtrar tickets con fecha de registro en los últimos 30 días:\n   - `WHERE fecha_registro >= (CURRENT_DATE - INTERVAL '30 days')`\n\n2. Calcular el total de tickets filtrados:\n   - `COUNT(*)`\n\n3. Seleccionar el resultado:\n   - `SELECT COUNT(*)`\n   - `FROM ft_tickets_ia`\n   - `WHERE fecha_registro >= (CURRENT_DATE - INTERVAL '30 days')`", "generated_sql": "SELECT\n  COUNT(*)\nFROM ft_tickets_ia\nWHERE\n  fecha_registro >= (\n    CURRENT_DATE - INTERVAL '30' DAYS\n  )", "result": {"error": "error de sintaxis en o cerca de «DAYS»\nLINE 6:     CURRENT_DATE - INTERVAL '30' DAYS\n                                         ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 14.04, "tags": []}
{"request_id": "4630c869-8ebe-4270-92a1-016f265390bb", "client_ip": "127.0.0.1", "timestamp": "2025-06-02T15:37:20.524563", "status": "fails", "original_question": "¿Cuantos tickets se han generado en el ultimo año?", "enhanced_question": "¿Cuántos tickets se han generado en el último año, incluyendo hasta el año actual?  \n", "flow": "1. Filtrar los registros de tickets por fecha de generación.\n2. Restringir la fecha de generación al último año, incluyendo el año actual.\n3. Contar el número total de registros filtrados.", "generated_sql": "SELECT\n  COUNT(*)\nFROM ft_tickets_ia\nWHERE\n  generated_date >= DATE_TRUNC('YEAR', CURRENT_DATE) - INTERVAL '1' YEAR", "result": {"error": "no existe la columna «generated_date»\nLINE 5:   generated_date >= DATE_TRUNC('YEAR', CURRENT_DATE) - INTER...\n          ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 7.43, "tags": []}
{"request_id": "17520e2f-6661-486d-9a45-0d0e5648e077", "client_ip": "127.0.0.1", "timestamp": "2025-06-02T15:38:05.287303", "status": "fails", "original_question": "Cual es el estatus de ticket 10009?", "enhanced_question": "¿Qué estado tiene el ticket con número 10009? \n", "flow": "1. Seleccionar los registros del ticket.\n2. Filtrar los registros del ticket por el número de ticket específico (10009).\n3. Seleccionar el campo que indica el estado del ticket.\n4. Calcular el valor del campo que indica el estado del ticket.", "generated_sql": "SELECT\n  estado\nFROM ft_tickets_ia\nWHERE\n  numero_ticket = 10009", "result": {"error": "no existe la columna «estado»\nLINE 2:   estado\n          ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 7.71, "tags": []}
{"request_id": "8c31633d-bcbd-4e64-8b3c-675fb34b19ea", "client_ip": "127.0.0.1", "timestamp": "2025-06-02T15:40:53.902751", "status": "fails", "original_question": "¿Qué porcentaje de tickets atendidos este año fueron resueltos fuera del SLA, por cada ciudad?", "enhanced_question": "¿Podrías decirme qué porcentaje de tickets atendidos este año no se resolvieron dentro del tiempo establecido para cada ciudad? \n", "flow": "1. Filtrar los registros de tickets atendidos este año.\n2. Agrupar los registros por ciudad.\n3. Calcular el número total de tickets por cada grupo.\n4. Filtrar los registros de tickets que no se resolvieron dentro del tiempo establecido.\n5. Calcular el número de tickets no resueltos por cada grupo.\n6. Calcular el porcentaje de tickets no resueltos para cada grupo (dividir el número de tickets no resueltos por el total de tickets y multiplicar por 100).\n7. Presentar el porcentaje de tickets no resueltos para cada ciudad.", "generated_sql": "SELECT\n  city,\n  COUNT(id) AS total_tickets,\n  SUM(CASE WHEN resolved_at IS NULL THEN 1 ELSE 0 END) AS tickets_not_resolved,\n  ROUND(100 * SUM(CASE WHEN resolved_at IS NULL THEN 1 ELSE 0 END) / COUNT(id), 2) AS percentage_not_resolved\nFROM ft_tickets_ia\nWHERE\n  created_at >= DATE_TRUNC('YEAR', CURRENT_DATE)\n  AND (\n    resolved_at IS NULL\n    OR (\n      resolved_at < DATE_TRUNC('YEAR', CURRENT_DATE) + INTERVAL '1' YEAR - sla\n    )\n  )\nGROUP BY\n  city\nORDER BY\n  percentage_not_resolved DESC", "result": {"error": "no existe la columna «city»\nLINE 2:   city,\n          ^\n"}, "model": "mistral & gemma", "domain": "tickets", "duration": 20.38, "tags": []}
