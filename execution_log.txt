[2025-06-02 15:16:27] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 6:     CURRENT_DATE - INTERVAL '30' DAYS
                                         ^

[2025-06-02 15:37:20] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «generated_date»
LINE 5:   generated_date >= DATE_TRUNC('YEAR', CURRENT_DATE) - INTER...
          ^

[2025-06-02 15:38:05] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «estado»
LINE 2:   estado
          ^

[2025-06-02 15:40:53] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «city»
LINE 2:   city,
          ^

[2025-06-03 10:44:33] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «created_at»
LINE 5:   EXTRACT(MONTH FROM created_at) = 12 AND EXTRACT(YEAR FROM ...
                             ^

[2025-06-03 11:06:42] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «created_at»
LINE 5:   EXTRACT(MONTH FROM created_at) = 12 AND EXTRACT(YEAR FROM ...
                             ^

[2025-06-03 11:15:42] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «created_at»
LINE 5:   EXTRACT(MONTH FROM created_at) = 12 AND EXTRACT(YEAR FROM ...
                             ^

[2025-06-03 11:25:13] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «created_at»
LINE 5:   EXTRACT(MONTH FROM created_at) = 12 AND EXTRACT(YEAR FROM ...
                             ^

[2025-06-03 11:39:02] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «created_at»
LINE 5:   EXTRACT(MONTH FROM created_at) = 12 AND EXTRACT(YEAR FROM ...
                             ^

[2025-06-03 12:42:48] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «created_at»
LINE 5:   EXTRACT(YEAR FROM created_at) = 2025
                            ^

[2025-06-04 11:58:46] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 12:34:01] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 13:03:03] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 13:04:28] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 13:39:18] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 13:45:44] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 13:46:36] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:16:55] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:22:26] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:25:48] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:26:39] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:28:11] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:29:29] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:30:07] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:34:32] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:35:54] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:36:50] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:56:34] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 15:57:39] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 16:00:07] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 16:01:12] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 16:05:42] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 16:07:10] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 16:09:01] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-04 16:26:40] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «MONTHS»
LINE 7: ...>= DATE_TRUNC('QUARTER', CURRENT_DATE) - INTERVAL '3' MONTHS
                                                                 ^

[2025-06-05 09:13:25] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «cantidad_atenciones»
LINE 7:     ROW_NUMBER() OVER (ORDER BY cantidad_atenciones DESC) AS...
                                        ^

[2025-06-05 09:14:52] Error al ejecutar SQL para el dominio 'tickets': no existe la columna «cantidad_atenciones»
LINE 7:     ROW_NUMBER() OVER (ORDER BY cantidad_atenciones DESC) AS...
                                        ^

[2025-06-05 09:19:07] Error al ejecutar SQL para el dominio 'tickets': la columna «subquery.servicio» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 5:     servicio,
            ^

[2025-06-05 09:20:37] Error al ejecutar SQL para el dominio 'tickets': la columna «subquery.servicio» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 5:     servicio,
            ^

[2025-06-05 09:21:15] Error al ejecutar SQL para el dominio 'tickets': la columna «subquery.servicio» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 5:     servicio,
            ^

[2025-06-05 09:27:33] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «HOURS»
LINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS
                                                                  ^

[2025-06-05 09:28:03] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «HOURS»
LINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS
                                                                  ^

[2025-06-05 09:29:32] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «HOURS»
LINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS
                                                                  ^

[2025-06-05 09:33:57] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «HOURS»
LINE 9: ...erre IS NULL AND tiempo_solucion_total < INTERVAL '24' HOURS
                                                                  ^

[2025-06-05 10:00:31] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 10:     ) < INTERVAL '3' DAYS
                              ^

[2025-06-05 10:01:26] Error al ejecutar SQL para el dominio 'tickets': no existe la función datediff(unknown, date, date)
LINE 3:     CAST(SUM(CASE WHEN DATEDIFF('day', fecha_registro, FECHA...
                               ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-05 10:02:51] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 10:     ) < INTERVAL '3' DAYS
                              ^

[2025-06-05 10:08:25] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 10:     ) < INTERVAL '3' DAYS
                              ^

[2025-06-05 12:50:44] Error al ejecutar SQL para el dominio 'tickets': no se permiten funciones de ventana deslizante en WHERE
LINE 27:   ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) ...
           ^

[2025-06-05 12:51:22] Error al ejecutar SQL para el dominio 'tickets': no se permiten funciones de ventana deslizante en WHERE
LINE 27:   ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) ...
           ^

[2025-06-05 12:52:52] Error al ejecutar SQL para el dominio 'tickets': no se permiten funciones de ventana deslizante en WHERE
LINE 27:   ROW_NUMBER() OVER (ORDER BY promedio_tiempo_atencion ASC) ...
           ^

[2025-06-05 15:09:37] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 15:     tiempo_atencion > INTERVAL '3' DAYS
                                            ^

[2025-06-05 15:15:35] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 15:     tiempo_atencion > INTERVAL '3' DAYS
                                            ^

[2025-06-05 15:16:42] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 15:     tiempo_atencion > INTERVAL '3' DAYS
                                            ^

[2025-06-05 15:17:04] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 15:     tiempo_atencion > INTERVAL '3' DAYS
                                            ^

[2025-06-05 15:17:55] Error al ejecutar SQL para el dominio 'tickets': error de sintaxis en o cerca de «DAYS»
LINE 15:     tiempo_atencion > INTERVAL '3' DAYS
                                            ^

[2025-06-05 15:29:55] Error al ejecutar SQL para el dominio 'tickets': no existe la función pg_catalog.extract(unknown, integer)
LINE 4:     EXTRACT(EPOCH FROM (
            ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-05 15:30:43] Error al ejecutar SQL para el dominio 'tickets': no existe la función pg_catalog.extract(unknown, integer)
LINE 4:     EXTRACT(EPOCH FROM (
            ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-05 15:31:29] Error al ejecutar SQL para el dominio 'tickets': no existe la función pg_catalog.extract(unknown, integer)
LINE 4:     EXTRACT(EPOCH FROM (
            ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-05 15:59:29] Error al ejecutar SQL para el dominio 'tickets': la referencia a la columna «departamento» es ambigua
LINE 21:   departamento,
           ^

[2025-06-05 16:00:39] Error al ejecutar SQL para el dominio 'tickets': la referencia a la columna «departamento» es ambigua
LINE 21:   departamento,
           ^

[2025-06-06 16:44:26] Error al ejecutar SQL para el dominio 'tickets': la referencia a la columna «unidad_negocio» es ambigua
LINE 23:   unidad_negocio,
           ^

[2025-06-06 16:46:45] Error al ejecutar SQL para el dominio 'tickets': falta una entrada para la tabla «tickets_atendidos» en la cláusula FROM
LINE 20:     tickets_atendidos.tickets_atendidos / tickets_atendidos_...
             ^

[2025-06-06 17:34:14] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:37:09] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:37:30] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:41:21] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:45:13] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:47:21] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:48:48] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:51:08] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 3: FROM ft_tickets_ias
             ^

[2025-06-06 17:57:00] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_iaa»
LINE 3: FROM ft_tickets_iaa
             ^

[2025-06-06 17:58:01] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_iaa»
LINE 3: FROM ft_tickets_iaa
             ^

[2025-06-07 11:31:35] Error al ejecutar SQL para el dominio 'tickets': could not translate host name "pybddwh.gruporeyes.org" to address: Host desconocido. 

[2025-06-09 09:24:18] Error al ejecutar SQL para el dominio 'tickets': no existe la relación «ft_tickets_ias»
LINE 5: FROM ft_tickets_ias
             ^

[2025-06-09 10:03:42] Error al ejecutar SQL para el dominio 'tickets': el operador no existe: text / double precision
LINE 6:     AVG(tiempo_atencion / tiempo_sla_servicio * 100) AS porc...
                                ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-12 18:22:42] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ABIERTO'
[2025-06-12 18:23:50] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
[2025-06-12 18:24:12] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
[2025-06-12 18:24:28] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
[2025-06-12 18:24:50] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  departamento_colaborador_asignado,
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
GROUP BY
  departamento_colaborador_asignado
[2025-06-13 11:22:44] [SQL EXECUTION OK] Tiempo: 0.19s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
  OR estatus_ticket = 'AUTORIZACIÓN'
  OR estatus_ticket = 'MESA DE AYUDA'
[2025-06-16 15:14:22] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND NOT fecha_cierre IS NULL
[2025-06-16 15:15:12] [SQL EXECUTION OK] Tiempo: 2.20s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND NOT fecha_cierre IS NULL
[2025-06-16 15:17:27] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_cierre IS NULL AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
[2025-06-16 15:17:38] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_cierre IS NULL AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
[2025-06-16 15:30:08] [SQL EXECUTION ERROR] Tiempo: 2.47s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.departamento_colaborador_asignado = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 15:30:36] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.centro_trabajo = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 15:31:36] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.departamento_colaborador_asignado = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 15:32:44] [SQL EXECUTION ERROR] Tiempo: 0.02s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.centro_trabajo = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 15:37:57] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.centro_trabajo = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 15:40:53] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.departamento_colaborador_asignado = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 15:42:04] [SQL EXECUTION ERROR] Tiempo: 0.02s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(*) AS cantidad_tickets_abiertos
FROM ft_tickets_ia AS t
JOIN departamentos AS d
  ON t.centro_trabajo = d.id
JOIN areas AS a
  ON t.area_colaborador_asignado = a.id
WHERE
  NOT t.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND t.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 6: JOIN departamentos AS d
             ^

[2025-06-16 15:42:39] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  d.nombre AS departamento,
  a.nombre AS area,
  COUNT(DISTINCT ftt.folio_ticket) AS cantidad_tickets_abiertos,
  COUNT(DISTINCT CASE WHEN ftt.estatus_ticket = 'EN PROCESO' THEN ftt.folio_ticket END) AS cantidad_tickets_en_proceso
FROM ft_tickets_ia AS ftt
JOIN departamentos AS d
  ON ftt.departamento_colaborador_asignado = d.id
JOIN areas AS a
  ON ftt.area_colaborador_asignado = a.id
WHERE
  NOT ftt.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND ftt.fecha_cierre IS NULL
GROUP BY
  d.nombre,
  a.nombre
Error: no existe la relación «departamentos»
LINE 7: JOIN departamentos AS d
             ^

[2025-06-16 16:29:01] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  *
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-16 16:31:05] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  centro_trabajo AS "Centro de Trabajo",
  area_colaborador_asignado AS "Área Asignada",
  COUNT(*) AS "Tickets Abiertos",
  CASE
    WHEN estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL
    THEN 'En Proceso'
    ELSE 'No En Proceso'
  END AS "Estado"
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
GROUP BY
  centro_trabajo,
  area_colaborador_asignado
Error: la columna «ft_tickets_ia.estatus_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 6:     WHEN estatus_ticket = 'EN PROCESO' AND fecha_cierre IS N...
                 ^

[2025-06-16 16:43:37] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
UNION ALL
SELECT
  d.departamento_colaborador_asignado AS "Departamento",
  d.area_colaborador_asignado AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM ft_tickets_ia AS ti
JOIN (
  SELECT
    departamento_colaborador_asignado,
    area_colaborador_asignado,
    COUNT(*) AS cantidad
  FROM ft_tickets_ia
  WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL
  GROUP BY
    departamento_colaborador_asignado,
    area_colaborador_asignado
) AS d
  ON ti.departamento_colaborador_asignado = d.departamento_colaborador_asignado
  AND ti.area_colaborador_asignado = d.area_colaborador_asignado
WHERE
  ti.estatus_atencion <> 'FUERA DE TIEPO'
Error: la columna «d.departamento_colaborador_asignado» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 13:   d.departamento_colaborador_asignado AS "Departamento",
           ^

[2025-06-16 16:44:55] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) AS "Tickets En Proceso Actuales",
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) - COUNT(*) FILTER(WHERE
    estatus_atencion = 'FUERA DE TIEMPO' OR estatus_ticket = 'EN PROCESO') AS "Tickets En Proceso Sin Tiempos Excedidos"
FROM ft_tickets_ia
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-16 16:47:30] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS "Tickets Abiertos",
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) AS "Tickets En Proceso"
FROM ft_tickets_ia
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-16 16:48:13] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) AS "Tickets Fuera de Plazo y En Proceso"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO' AND estatus_atencion = 'FUERA DE TIEMPO'
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-16 16:49:18] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  motivo_ticket AS tipo_ticket,
  COUNT(*) AS cantidad
FROM ft_tickets_ia
WHERE
  anio_registro = 2025
  AND folio_ticket <> -1 /* El uso de -1 como identificador especial indica que el ticket fue eliminado o cancelado */
GROUP BY
  motivo_ticket
ORDER BY
  cantidad DESC
[2025-06-16 16:50:04] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  motivo_ticket AS tipo_ticket,
  COUNT(*) AS cantidad
FROM ft_tickets_ia
WHERE
  anio_registro = 2025
GROUP BY
  motivo_ticket
ORDER BY
  cantidad DESC
[2025-06-16 16:50:44] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_registro = CURRENT_DATE
  AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
[2025-06-16 16:51:36] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) AS "Tickets Hoy"
FROM ft_tickets_ia
WHERE
  fecha_registro = CURRENT_DATE
  AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-16 17:13:24] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  area_colaborador_asignado AS "Área",
  departamento_colaborador_asignado AS "Departamento",
  COUNT(CASE WHEN estatus_ticket = 'ATENDIDO' THEN folio_ticket END) AS "Tickets Atendidos",
  COUNT(
    CASE
      WHEN NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
      AND EXTRACT(MONTH FROM fecha_registro) = EXTRACT(MONTH FROM NOW())
      THEN folio_ticket
    END
  ) AS "Tickets Registrados"
FROM ft_tickets_ia
WHERE
  EXTRACT(YEAR FROM fecha_registro) = EXTRACT(YEAR FROM NOW())
  AND EXTRACT(MONTH FROM fecha_registro) = EXTRACT(MONTH FROM NOW())
GROUP BY
  area_colaborador_asignado,
  departamento_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-16 17:25:12] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
with tickets_resumen as (
	select
	  area_colaborador_asignado as area,
	  departamento_colaborador_asignado as departamento,
	  COUNT(*) filter(where estatus_ticket <> 'CANCELADO')::decimal as total_tickets_registrados,
	  COUNT(*) filter (where estatus_ticket = 'ATENDIDO')::decimal as total_tickets_atendidos  
	from ft_tickets_ia
	where
	  date_trunc('month', fecha_registro)::date = date_trunc('month', CURRENT_DATE)::date	 
	group by
	  area_colaborador_asignado,
	  departamento_colaborador_asignado
)
select 
	departamento, 
	area,
	total_tickets_registrados,
	total_tickets_atendidos,
	((total_tickets_atendidos / nullif(total_tickets_registrados, 0))*100)::decimal(10,2) as relacion_atencion
from tickets_resumen
order by 1,2
[2025-06-16 17:31:14] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT fecha_cierre IS NULL
  AND estatus_ticket <> 'CANCELADO'
  AND EXTRACT(MONTH FROM fecha_cierre) = EXTRACT(MONTH FROM CURRENT_DATE)
[2025-06-16 17:34:04] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT fecha_cierre IS NULL
  AND estatus_ticket <> 'CANCELADO'
  AND EXTRACT(MONTH FROM fecha_cierre) = EXTRACT(MONTH FROM CURRENT_DATE)
[2025-06-16 17:35:19] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT fecha_cierre IS NULL
  AND CAST(fecha_cierre AS DATE) = CAST(CURRENT_DATE AS DATE)
  AND estatus_ticket <> 'CANCELADO'
[2025-06-16 17:43:00] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
select 	
	date_part('month', CURRENT_DATE) as mes_actual,
	date_part('year', CURRENT_DATE) as año_actual,
	count(*) as tickets_cerrados
from ft_tickets_ia
where
  not fecha_cierre is null
  and date_trunc('month', fecha_cierre)::date = date_trunc('month', CURRENT_DATE)::date
  and estatus_ticket <> 'CANCELADO';
[2025-06-16 17:45:58] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH tickets_cerrados AS (
  SELECT
    area_colaborador_asignado AS area,
    departamento_colaborador_asignado AS departamento,
    folio_ticket AS ticket_id,
    COUNT(*) AS tickets_cerrados
  FROM ft_tickets_ia
  WHERE
    estatus_ticket = 'ATENDIDO' /* Filtra solo los tickets cerrados */
    AND fecha_cierre >= DATE_TRUNC('MONTH', CURRENT_DATE) /* Filtra solo los tickets del mes actual */
    AND estatus_ticket <> 'CANCELADO' /* Excluye los tickets cancelados */
  GROUP BY
    area_colaborador_asignado,
    departamento_colaborador_asignado
)
SELECT
  departamento,
  area,
  ticket_id,
  tickets_cerrados
FROM tickets_cerrados
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 5:     folio_ticket AS ticket_id,
            ^

[2025-06-16 17:57:35] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  area_colaborador_asignado AS "Área",
  departamento_colaborador_asignado AS "Departamento",
  COUNT(*) AS "Total"
FROM ft_tickets_ia
WHERE
  NOT fecha_cierre IS NULL
  AND EXTRACT(MONTH FROM fecha_cierre) = EXTRACT(MONTH FROM NOW())
  AND estatus_ticket = 'CERRADO'
GROUP BY
  area_colaborador_asignado,
  departamento_colaborador_asignado
[2025-06-16 17:58:16] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ABIERTO'
[2025-06-16 18:05:08] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket <> 'CANCELADO' AND fecha_cierre IS NULL
[2025-06-17 09:12:09] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket <> 'CANCELADO' AND fecha_cierre IS NULL
[2025-06-17 09:29:37] [SQL EXECUTION OK] Tiempo: 0.28s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-17 10:24:46] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  anio_registro AS year,
  mes_registro AS month,
  COUNT(*) AS count
FROM ft_tickets_ia
WHERE
  anio_registro = 2024
GROUP BY
  anio_registro,
  mes_registro
[2025-06-17 10:26:32] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  anio_registro AS year,
  mes_registro AS month,
  COUNT(*) AS count
FROM ft_tickets_ia
WHERE
  anio_registro = 2024
GROUP BY
  anio_registro,
  mes_registro
[2025-06-17 10:27:16] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  *
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (ORDER BY fecha_registro DESC) AS row_number
  FROM ft_tickets_ia
) AS tickets
WHERE
  row_number >= (
    SELECT
      COUNT(*)
    FROM ft_tickets_ia
  ) - 5
[2025-06-17 10:27:56] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
	select
		extract(year from tks.fecha_registro) as anio,
		count(*) filter(where tks.estatus_ticket <> 'CANCELADO') as tickets_registrados,
		count(*) filter(where tks.estatus_ticket = 'ATENDIDO' or (not tks.fecha_cierre is null and not tks.estatus_ticket in ('CANCELADO'))) as tickets_atendidos,
		count(*) filter(where not tks.estatus_ticket in ('ATENDIDO', 'CANCELADO') and tks.fecha_cierre is null) as tickets_abiertos,
		count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null) as tickets_proceso,
		count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_fuera_tiempo
	from ft_tickets_ia tks	
	where extract(year from tks.fecha_registro) = extract(year from CURRENT_DATE)
	group by extract(year from tks.fecha_registro)
[2025-06-17 10:28:05] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
	select
		extract(year from tks.fecha_registro) as anio,
		count(*) filter(where tks.estatus_ticket <> 'CANCELADO') as tickets_registrados,
		count(*) filter(where tks.estatus_ticket = 'ATENDIDO' or (not tks.fecha_cierre is null and not tks.estatus_ticket in ('CANCELADO'))) as tickets_atendidos,
		count(*) filter(where not tks.estatus_ticket in ('ATENDIDO', 'CANCELADO') and tks.fecha_cierre is null) as tickets_abiertos,
		count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null) as tickets_proceso,
		count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_fuera_tiempo
	from ft_tickets_ia tks	
	where extract(year from tks.fecha_registro) = extract(year from CURRENT_DATE)
	group by extract(year from tks.fecha_registro)
[2025-06-17 10:28:18] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
	select
		extract(year from tks.fecha_registro) as anio,
		count(*) filter(where tks.estatus_ticket <> 'CANCELADO') as tickets_registrados,
		count(*) filter(where tks.estatus_ticket = 'ATENDIDO' or (not tks.fecha_cierre is null and not tks.estatus_ticket in ('CANCELADO'))) as tickets_atendidos,
		count(*) filter(where not tks.estatus_ticket in ('ATENDIDO', 'CANCELADO') and tks.fecha_cierre is null) as tickets_abiertos,
		count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null) as tickets_proceso,
		count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_fuera_tiempo
	from ft_tickets_ia tks	
	where extract(year from tks.fecha_registro) = 2024
	group by extract(year from tks.fecha_registro)
[2025-06-17 10:29:05] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = 2024
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro)
[2025-06-17 10:29:41] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = 2025
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro)
[2025-06-17 10:30:23] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  departamento_colaborador_asignado,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = 2025
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro),
  departamento_colaborador_asignado
[2025-06-17 10:34:10] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  departamento_colaborador_asignado,
  CAST(fecha_registro AS month) AS mes,
  COUNT(*) AS cantidad
FROM ft_tickets_ia
WHERE
  anio_registro = 2025
GROUP BY
  departamento_colaborador_asignado,
  CAST(fecha_registro AS month)
ORDER BY
  departamento_colaborador_asignado,
  mes
Error: no existe el tipo «month»
LINE 3:   CAST(fecha_registro AS month) AS mes,
                                 ^

[2025-06-17 10:46:28] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  CAST(fecha_registro AS month) AS mes,
  departamento_colaborador_asignado,
  COUNT(*) AS cantidad_tickets
FROM ft_tickets_ia
WHERE
  anio_registro = 2025
GROUP BY
  1,
  2
ORDER BY
  1,
  2
Error: no existe el tipo «month»
LINE 2:   CAST(fecha_registro AS month) AS mes,
                                 ^

[2025-06-17 11:02:01] [SQL EXECUTION OK] Tiempo: 0.57s
SQL:
SELECT
  departamento_colaborador_asignado,
  COUNT(*) AS cantidad_tickets
FROM ft_tickets_ia
WHERE
  anio_registro = 2025
GROUP BY
  departamento_colaborador_asignado
ORDER BY
  cantidad_tickets DESC
[2025-06-17 12:08:06] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
    AND fecha_cierre IS NULL
    AND anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)) AS "Tickets Abiertos Año Actual",
  (
    SELECT
      COUNT(*)
    FROM ft_tickets_ia AS t2
    WHERE
      t2.departamento_colaborador_asignado = t1.departamento_colaborador_asignado
      AND EXTRACT(YEAR FROM t2.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
    ORDER BY
      EXTRACT(MONTH FROM t2.fecha_registro) DESC
    LIMIT 1
  ) AS "Tickets Abiertos Mes Actual"
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
  AND anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  departamento_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado
Error: falta una entrada para la tabla «t1» en la cláusula FROM
LINE 12:       t2.departamento_colaborador_asignado = t1.departamento...
                                                      ^

[2025-06-17 13:33:02] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-17 13:33:16] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-17 13:35:02] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND tks.estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro)
[2025-06-17 13:36:28] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  dpt.nombre AS departamento,
  area.nombre AS área,
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
JOIN departamentos AS dpt
  ON tks.departamento_colaborador_asignado = dpt.id
JOIN areas AS area
  ON tks.area_colaborador_asignado = area.id
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  dpt.nombre,
  area.nombre,
  EXTRACT(YEAR FROM tks.fecha_registro)
Error: no existe la relación «departamentos»
LINE 21: JOIN departamentos AS dpt
              ^

[2025-06-17 14:02:41] [SQL EXECUTION ERROR] Tiempo: 0.07s
SQL:
SELECT
  dpt.nombre AS departamento,
  area.nombre AS area,
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
JOIN departamentos AS dpt
  ON tks.departamento_colaborador_asignado = dpt.id
JOIN areas AS area
  ON tks.area_colaborador_asignado = area.id
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  dpt.nombre,
  area.nombre,
  EXTRACT(YEAR FROM tks.fecha_registro)
Error: no existe la relación «departamentos»
LINE 21: JOIN departamentos AS dpt
              ^

[2025-06-17 15:01:36] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  dpt.nombre AS departamento,
  area.nombre AS área,
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
JOIN departamentos AS dpt
  ON tks.departamento_colaborador_asignado = dpt.id
JOIN areas AS area
  ON tks.area_colaborador_asignado = area.id
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  dpt.nombre,
  area.nombre,
  EXTRACT(YEAR FROM tks.fecha_registro)
Error: no existe la relación «departamentos»
LINE 21: JOIN departamentos AS dpt
              ^

[2025-06-17 15:30:57] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  dpt.nombre AS departamento,
  area.nombre AS area,
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND tks.estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
JOIN (
  SELECT
    id,
    nombre
  FROM departamentos
) AS dpt
  ON tks.departamento_colaborador_asignado = dpt.id
JOIN (
  SELECT
    id,
    nombre
  FROM areas
) AS area
  ON tks.area_colaborador_asignado = area.id
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = 2025
GROUP BY
  dpt.nombre,
  area.nombre,
  EXTRACT(YEAR FROM tks.fecha_registro)
Error: no existe la relación «departamentos»
LINE 25:   FROM departamentos
                ^

[2025-06-17 15:38:03] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  dpt.nombre AS departamento,
  area.nombre AS area,
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND tks.estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
JOIN (
  SELECT
    id,
    nombre
  FROM departamentos
) AS dpt
  ON tks.departamento_colaborador_asignado = dpt.id
JOIN (
  SELECT
    id,
    nombre
  FROM areas
) AS area
  ON tks.area_colaborador_asignado = area.id
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = 2025
GROUP BY
  dpt.nombre,
  area.nombre,
  EXTRACT(YEAR FROM tks.fecha_registro)
Error: no existe la relación «departamentos»
LINE 25:   FROM departamentos
                ^

[2025-06-17 16:44:28] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  departamento_colaborador_asignado,
  area_colaborador_asignado,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro),
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-17 16:45:56] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro)
[2025-06-17 16:48:45] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-17 16:49:42] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
  AND departamento_colaborador_asignado = 'Inteligencia Empresarial'
[2025-06-17 17:59:13] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
  AND departamento_colaborador_asignado = 'Soporte Técnico'
[2025-06-17 18:01:10] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  EXTRACT(YEAR FROM tks.fecha_registro) AS anio,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket <> 'CANCELADO') AS tickets_registrados,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'ATENDIDO'
    OR (
      NOT tks.fecha_cierre IS NULL AND NOT tks.estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos,
  COUNT(*) FILTER(WHERE
    NOT tks.estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND tks.fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO' AND tks.fecha_cierre IS NULL) AS tickets_en_proceso,
  COUNT(*) FILTER(WHERE
    tks.estatus_ticket = 'EN PROCESO'
    AND tks.fecha_cierre IS NULL
    AND tks.estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia AS tks
WHERE
  EXTRACT(YEAR FROM tks.fecha_registro) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  EXTRACT(YEAR FROM tks.fecha_registro)
[2025-06-17 18:01:32] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_registro = CURRENT_DATE
  AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
[2025-06-18 09:13:21] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
WITH tickets_hoy AS (
  SELECT
    *
  FROM ft_tickets_ia
  WHERE
    CAST(fecha_registro AS DATE) = CURRENT_DATE
), tickets_abiertos AS (
  SELECT
    *
  FROM tickets_hoy
  WHERE
    estatus_ticket = 'ABIERTO'
), tickets_en_proceso AS (
  SELECT
    *
  FROM tickets_abiertos
  WHERE
    estatus_ticket = 'EN PROCESO'
), tickets_fuera_de_tiempo AS (
  SELECT
    *
  FROM tickets_abiertos
  WHERE
    estatus_atencion = 'FUERA DE TIEMPO'
)
SELECT
  COUNT(*) AS total_tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO') AS total_tickets_en_proceso,
  COUNT(*) FILTER(WHERE
    estatus_atencion = 'FUERA DE TIEMPO') AS total_tickets_fuera_de_tiempo,
  ROUND(
    100.0 * COUNT(*) FILTER(WHERE
      estatus_atencion = 'FUERA DE TIEMPO') / COUNT(*) OVER (),
    2
  ) AS porcentaje_tickets_fuera_de_tiempo
FROM tickets_abiertos
[2025-06-18 09:16:52] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  total_tickets_abiertos,
  total_tickets_en_proceso,
  total_tickets_fuera_de_tiempo
FROM (
  (
    SELECT
      COUNT(*) AS total_tickets_abiertos
    FROM ft_tickets_ia
    WHERE
      fecha_registro = CURRENT_DATE
      AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
      AND fecha_cierre IS NULL
  ) AS abiertos, (
    SELECT
      COUNT(*) AS total_tickets_en_proceso
    FROM ft_tickets_ia
    WHERE
      fecha_registro = CURRENT_DATE
      AND estatus_ticket = 'EN PROCESO'
      AND fecha_cierre IS NULL
  ) AS en_proceso, (
    SELECT
      COUNT(*) AS total_tickets_fuera_de_tiempo
    FROM ft_tickets_ia
    WHERE
      fecha_registro = CURRENT_DATE
      AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
      AND fecha_cierre IS NULL
      AND tiempo_atencion > tiempo_sla_servicio
  ) AS fuera_de_tiempo
) AS resultados
Error: error de sintaxis en o cerca de «,»
LINE 14:   ) AS abiertos, (
                        ^

[2025-06-18 09:22:02] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL
[2025-06-18 09:50:54] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
select
	count(*) filter(where not tks.estatus_ticket in ('ATENDIDO', 'CANCELADO') and tks.fecha_cierre is null) as tickets_abiertos,
	count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null) as tickets_proceso,
	count(*) filter(where tks.estatus_ticket = 'EN PROCESO' and tks.fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_fuera_tiempo
from ft_tickets_ia
where fecha_registro = CURRENT_DAY
Error: falta una entrada para la tabla «tks» en la cláusula FROM
LINE 2:  count(*) filter(where not tks.estatus_ticket in ('ATENDIDO'...
                                   ^

[2025-06-18 09:52:38] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
select
	CURRENT_DATE,
	count(*) filter(where not estatus_ticket in ('ATENDIDO', 'CANCELADO') and fecha_cierre is null) as tickets_abiertos,
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null) as tickets_proceso,
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_fuera_tiempo
from ft_tickets_ia
where fecha_registro = CURRENT_DATE;
[2025-06-18 09:53:24] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  CAST(COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) AS DECIMAL) AS "Tickets En Proceso",
  CAST(COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO'
    AND fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS DECIMAL) AS "Tickets Fuera de Tiempo"
FROM ft_tickets_ia
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-18 10:12:18] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  CURRENT_DATE AS fecha_registro,
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) AS tickets_proceso,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO'
    AND fecha_cierre IS NULL
    AND estatus_atencion = 'FUERA DE TIEMPO') AS tickets_fuera_tiempo
FROM ft_tickets_ia
WHERE
  fecha_registro = CURRENT_DATE
[2025-06-18 10:17:16] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  (
    fecha_registro = CURRENT_DATE OR fecha_registro = CURRENT_DATE - INTERVAL '1' DAY
  )
  AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
[2025-06-18 10:18:12] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  CAST(DATE_TRUNC('WEEK', fecha_registro) AS DATE) AS semana,
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) AS tickets_en_proceso,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'ATENDIDO') AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  fecha_registro >= CURRENT_DATE - INTERVAL '7' DAYS
  AND fecha_registro < CURRENT_DATE + INTERVAL '1' DAY
GROUP BY
  semana
Error: error de sintaxis en o cerca de «DAYS»
LINE 11:   fecha_registro >= CURRENT_DATE - INTERVAL '7' DAYS
                                                         ^

[2025-06-18 10:37:16] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) AS "Tickets Fuera de Tiempo en Proceso"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
  AND estatus_atencion = 'FUERA DE TIEMPO'
  AND anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  COUNT(*) DESC,
  departamento_colaborador_asignado,
  area_colaborador_asignado
LIMIT 1
[2025-06-18 10:48:37] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO') AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'EN PROCESO' AND estatus_atencion = 'FUERA DE TIEMPO') AS "Tickets Atrasados"
FROM ft_tickets_ia
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-18 10:49:16] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
WITH departamentos_fuera_de_tiempo AS (
  SELECT
    departamento_colaborador_asignado,
    COUNT(*) AS tickets_fuera_de_tiempo
  FROM ft_tickets_ia
  WHERE
    estatus_atencion = 'FUERA DE TIEMPO'
    AND CAST(fecha_registro AS DATE) = CAST(CURRENT_DATE AS DATE)
    AND fecha_cierre IS NULL
  GROUP BY
    departamento_colaborador_asignado
)
SELECT
  departamento_colaborador_asignado,
  tickets_fuera_de_tiempo
FROM departamentos_fuera_de_tiempo
ORDER BY
  tickets_fuera_de_tiempo DESC
LIMIT 5
[2025-06-18 11:55:12] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
WITH departamentos_tickets AS (
  SELECT
    departamento_colaborador_asignado,
    COUNT(*) AS total_tickets
  FROM ft_tickets_ia
  WHERE
    CAST(fecha_registro AS DATE) = CURRENT_DATE
  GROUP BY
    departamento_colaborador_asignado
), departamentos_tickets_fuera_de_tiempo AS (
  SELECT
    d.departamento_colaborador_asignado,
    COUNT(*) AS total_tickets_fuera_de_tiempo
  FROM departamentos_tickets AS d
  JOIN ft_tickets_ia AS t
    ON d.departamento_colaborador_asignado = t.departamento_colaborador_asignado
  WHERE
    t.estatus_atencion = 'FUERA DE TIEMPO'
  GROUP BY
    d.departamento_colaborador_asignado
), ranking AS (
  SELECT
    *,
    RANK() OVER (ORDER BY total_tickets_fuera_de_tiempo DESC) AS ranking
  FROM departamentos_tickets_fuera_de_tiempo
)
SELECT
  departamento_colaborador_asignado
FROM ranking
WHERE
  ranking <= 5
[2025-06-18 12:10:07] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  COUNT(*) AS "Cantidad de Tickets Fuera de Tiempo"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
  AND estatus_atencion = 'FUERA DE TIEMPO'
  AND mes_registro = EXTRACT(MONTH FROM CURRENT_DATE)
GROUP BY
  departamento_colaborador_asignado
ORDER BY
  COUNT(*) DESC
LIMIT 5
[2025-06-18 12:27:46] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  COUNT(*) AS "Cantidad de Tickets Fuera de Tiempo"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
  AND estatus_atencion = 'FUERA DE TIEMPO'
  AND mes_registro = EXTRACT(MONTH FROM CURRENT_DATE)
GROUP BY
  departamento_colaborador_asignado
ORDER BY
  COUNT(*) DESC
LIMIT 5
[2025-06-18 12:28:23] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ABIERTO'
[2025-06-18 12:29:24] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-18 12:30:12] [SQL EXECUTION OK] Tiempo: 2.30s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_cierre = CURRENT_DATE
  AND fecha_registro < CURRENT_DATE
  AND estatus_ticket <> 'CANCELADO'
[2025-06-18 12:32:25] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  CAST((
    COUNT(*) FILTER(WHERE
      estatus_ticket = 'EN PROCESO' AND fecha_cierre IS NULL) / COUNT(*) FILTER(WHERE
      NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
      AND fecha_cierre IS NULL
      AND anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)) * 100
  ) AS DECIMAL(5, 2)) AS porcentaje_tickets_en_proceso
FROM ft_tickets_ia
WHERE
  anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)
[2025-06-18 12:35:32] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
select 
CAST((
	COUNT(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null)::decimal / 
	COUNT(*) filter(where not estatus_ticket in ('ATENDIDO', 'CANCELADO') and fecha_cierre is null)::decimal
	* 100
  ) as DECIMAL(5, 2)) as porcentaje_tickets_en_proceso
from ft_tickets_ia;
[2025-06-18 12:36:15] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  area_colaborador_asignado AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO'
GROUP BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado,
  area_colaborador_asignado
[2025-06-18 12:37:16] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  CAST(DATE_TRUNC('MONTH', fecha_registro) AS DATE) = CAST(DATE_TRUNC('MONTH', CURRENT_DATE) AS DATE)
  AND estatus_ticket <> 'CANCELADO'
[2025-06-18 12:37:45] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*) AS tickets_cerrados_hoy
FROM ft_tickets_ia
WHERE
  NOT fecha_cierre IS NULL
  AND fecha_cierre = CURRENT_DATE
  AND estatus_ticket <> 'CANCELADO'
[2025-06-18 12:38:18] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  servicio,
  COUNT(*) AS tickets_cerrados_por_servicio
FROM ft_tickets_ia
WHERE
  NOT fecha_cierre IS NULL
  AND fecha_cierre = CURRENT_DATE
  AND estatus_ticket <> 'CANCELADO'
GROUP BY
  servicio
[2025-06-18 12:38:59] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)
  AND mes_registro <= EXTRACT(MONTH FROM CURRENT_DATE)
  AND estatus_ticket = 'CANCELADO'
  AND NOT fecha_cierre IS NULL
[2025-06-18 12:39:19] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)
  AND mes_registro <= EXTRACT(MONTH FROM CURRENT_DATE)
  AND estatus_ticket = 'CANCELADO'
[2025-06-18 12:39:40] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
[2025-06-18 12:40:20] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_registro = CURRENT_DATE
  AND estatus_ticket = 'EN PROCESO'
  AND estatus_atencion = 'FUERA DE TIEMPO'
[2025-06-18 12:43:03] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
  AND estatus_atencion = 'FUERA DE TIEMPO'
  OR estatus_ticket = 'EN PROCESO'
  AND fecha_cierre IS NULL
[2025-06-18 12:44:41] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
select
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null) as tickets_proceso,
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_proceso
from ft_tickets_ia;
[2025-06-18 12:45:02] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
select
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null) as tickets_proceso,
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_proceso
from ft_tickets_ia;
[2025-06-18 12:45:26] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
select
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null) as tickets_proceso,
	count(*) filter(where estatus_ticket = 'EN PROCESO' and fecha_cierre is null and estatus_atencion = 'FUERA DE TIEMPO') as tickets_fuera_tiempo
from ft_tickets_ia;
[2025-06-18 12:45:50] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  CAST(fecha_registro AS DATE) = CURRENT_DATE AND ciudad = 'León'
[2025-06-18 12:46:05] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  CAST(fecha_registro AS DATE) = CURRENT_DATE AND ciudad ILIKE 'León'
[2025-06-18 12:46:17] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  CAST(fecha_registro AS DATE) = CURRENT_DATE AND ciudad ILIKE 'León'
[2025-06-18 12:47:06] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  CAST(fecha_registro AS DATE) = CURRENT_DATE AND (ciudad ILIKE 'León' or ciudad ILIKE 'Leon')
[2025-06-18 12:54:35] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
select
	extract(month from fecha_cierre) as mes,	
	ciudad,
	count(*) as tickets_atendidos
from ft_tickets_ia
where
	(estatus_ticket = 'ATENDIDO' or (not fecha_cierre is null and not estatus_ticket in ('CANCELADO')))
	and (ciudad ilike 'León' or ciudad ilike 'Leon')
	and extract(month from fecha_cierre ) = extract(month from CURRENT_DATE) 	
group by extract(month from fecha_cierre), ciudad
[2025-06-18 12:55:07] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  ciudad = 'QUERÉTARO'
  AND estatus_ticket = 'ATENDIDO'
  AND fecha_registro >= DATE_TRUNC('MONTH', CURRENT_DATE)
  AND fecha_registro <= DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL '1' MONTH - INTERVAL '1' DAY
[2025-06-18 12:55:59] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  DATE_PART('month', CURRENT_DATE) AS mes_actual,
  DATE_PART('year', CURRENT_DATE) AS año_actual,
  COUNT(*) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  (
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket = 'CANCELADO'
    )
  )
  AND ciudad ILIKE '%Querétaro%'
  AND CAST(DATE_TRUNC('MONTH', fecha_cierre) AS DATE) = CAST(DATE_TRUNC('MONTH', CURRENT_DATE) AS DATE)
[2025-06-18 12:56:26] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  DATE_PART('month', CURRENT_DATE) AS mes_actual,
  DATE_PART('year', CURRENT_DATE) AS año_actual,
  COUNT(*) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  (
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket = 'CANCELADO'
    )
  )
  AND ciudad ILIKE '%Queretaro%'
  AND CAST(DATE_TRUNC('MONTH', fecha_cierre) AS DATE) = CAST(DATE_TRUNC('MONTH', CURRENT_DATE) AS DATE)
[2025-06-18 12:56:48] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  DATE_PART('month', CURRENT_DATE) AS mes_actual,
  DATE_PART('year', CURRENT_DATE) AS año_actual,
  COUNT(*) AS tickets_atendidos_queretaro
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ATENDIDO'
  AND ciudad = 'queretaro'
  AND NOT fecha_cierre IS NULL
  AND CAST(DATE_TRUNC('MONTH', fecha_cierre) AS DATE) = CAST(DATE_TRUNC('MONTH', CURRENT_DATE) AS DATE)
[2025-06-18 13:30:49] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  DATE_PART('month', CURRENT_DATE) AS mes_actual,
  DATE_PART('year', CURRENT_DATE) AS año_actual,
  COUNT(*) AS tickets_atendidos_queretaro
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ATENDIDO'
  AND ciudad = 'QUERETARO'
  AND NOT fecha_cierre IS NULL
  AND CAST(DATE_TRUNC('MONTH', fecha_cierre) AS DATE) = CAST(DATE_TRUNC('MONTH', CURRENT_DATE) AS DATE)
[2025-06-18 13:31:21] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ATENDIDO' AND ciudad ILIKE 'León' AND ciudad ILIKE 'Leon'
[2025-06-18 13:32:56] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  (
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )
  )
  AND departamento_colaborador_asignado ILIKE 'LEON'
  AND DATE_TRUNC('MONTH', fecha_cierre) = DATE_TRUNC('MONTH', CURRENT_DATE)
[2025-06-18 13:33:31] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  EXTRACT(YEAR FROM fecha_cierre) AS año,
  ciudad,
  COUNT(*) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  (
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )
  )
  AND (
    ciudad ILIKE 'León' OR ciudad ILIKE 'Leon'
  )
  AND EXTRACT(YEAR FROM fecha_cierre) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  EXTRACT(YEAR FROM fecha_cierre),
  ciudad
[2025-06-18 13:36:44] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*)
FROM ft_tickets_ia
WHERE
  sistema = 'INNOVAPP'
  AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
[2025-06-18 13:37:39] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  fecha_registro,
  anio_registro,
  mes_registro,
  fecha_cierre,
  estatus_ticket,
  folio_ticket,
  sistema,
  motivo_ticket,
  motivo_cierre_ticket,
  servicio_cierre_ticket,
  centro_trabajo,
  ciudad,
  empresa,
  unidad_negocio,
  personal_reporta,
  colaborador_asignado,
  departamento_colaborador_asignado,
  area_colaborador_asignado,
  servicio,
  tiempo_solucion_total,
  tiempo_sla_servicio,
  tiempo_atencion,
  estatus_atencion
FROM ft_tickets_ia
WHERE
  folio_ticket = 70347
[2025-06-18 13:39:53] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  personal_reporta,
  COUNT(*) AS tickets_por_usuario
FROM ft_tickets_ia
WHERE
  centro_trabajo = 'corporativo' AND unidad_negocio = 'construcción'
GROUP BY
  personal_reporta
[2025-06-18 13:40:16] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  personal_reporta,
  COUNT(*) AS tickets_por_usuario
FROM ft_tickets_ia
WHERE unidad_negocio = 'construcción'
GROUP BY
  personal_reporta, centro_trabajo
[2025-06-18 13:41:05] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  personal_reporta,
  COUNT(*) AS tickets_por_usuario
FROM ft_tickets_ia
WHERE unidad_negocio ilike 'construcción'
GROUP BY
  personal_reporta, centro_trabajo
[2025-06-18 13:41:44] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  centro_trabajo,
  personal_reporta,
  COUNT(*) AS tickets_por_usuario
FROM ft_tickets_ia
WHERE unidad_negocio ilike 'construcción'
GROUP BY
  personal_reporta, centro_trabajo
[2025-06-18 13:42:31] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  centro_trabajo,
  unidad_negocio,
  COUNT(*) AS cantidad_tickets
FROM ft_tickets_ia
WHERE
  unidad_negocio = 'Construcción'
GROUP BY
  centro_trabajo,
  unidad_negocio
[2025-06-18 13:42:48] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  centro_trabajo,
  unidad_negocio,
  COUNT(*) AS cantidad_tickets
FROM ft_tickets_ia
WHERE
  unidad_negocio ilike 'Construcción'
GROUP BY
  centro_trabajo,
  unidad_negocio
[2025-06-18 13:43:27] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  centro_trabajo,
  unidad_negocio,
  COUNT(*) AS cantidad_tickets
FROM ft_tickets_ia
WHERE
  unidad_negocio ilike 'Construcción'
GROUP BY
  centro_trabajo,
  unidad_negocio
[2025-06-18 13:43:56] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  ciudad,
  COUNT(*)
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
GROUP BY
  ciudad
ORDER BY
  ciudad
[2025-06-18 13:44:31] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  departamento_colaborador_asignado AS "Departamento",
  COUNT(*) AS "Tickets Fuera de Tiempo"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO' AND estatus_atencion = 'FUERA DE TIEMPO'
GROUP BY
  departamento_colaborador_asignado
ORDER BY
  departamento_colaborador_asignado
[2025-06-18 14:53:41] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  mes_registro,
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_registro >= DATE_TRUNC('YEAR', CURRENT_DATE)
  AND fecha_registro < DATE_TRUNC('YEAR', CURRENT_DATE) + INTERVAL '1' YEAR
  AND NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO')
  AND fecha_cierre IS NULL
GROUP BY
  mes_registro
ORDER BY
  mes_registro
[2025-06-18 14:54:03] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  mes_registro,
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_registro >= DATE_TRUNC('YEAR', CURRENT_DATE)
  AND fecha_registro < DATE_TRUNC('YEAR', CURRENT_DATE) + INTERVAL '1' YEAR
  AND NOT estatus_ticket IN ('CANCELADO')
  AND fecha_cierre IS NULL
GROUP BY
  mes_registro
ORDER BY
  mes_registro
[2025-06-18 14:55:50] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  mes_registro,
  COUNT(*)
FROM ft_tickets_ia
WHERE
  fecha_registro >= DATE_TRUNC('YEAR', CURRENT_DATE)
  AND fecha_registro < DATE_TRUNC('YEAR', CURRENT_DATE) + INTERVAL '1' YEAR
  AND NOT estatus_ticket IN ('CANCELADO')
  AND fecha_cierre IS NULL
GROUP BY
  mes_registro
ORDER BY
  mes_registro
[2025-06-18 14:58:15] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
select
  mes_registro,
  count(*) as tickets_generados
from ft_tickets_ia
where anio_registro = date_part('YEAR', CURRENT_DATE)
and not estatus_ticket in ('CANCELADO')
group by
  mes_registro
order by
  mes_registro
[2025-06-18 14:59:02] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  colaborador_asignado,
  COUNT(*)
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'ATENDIDO'
GROUP BY
  colaborador_asignado
ORDER BY
  colaborador_asignado
[2025-06-18 15:05:42] [SQL EXECUTION OK] Tiempo: 0.20s
SQL:
SELECT
  sistema,
  estatus_ticket,
  COUNT(*) AS cantidad
FROM ft_tickets_ia
GROUP BY
  sistema,
  estatus_ticket
ORDER BY
  sistema
[2025-06-18 15:26:09] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  colaborador_asignado,
  COUNT(*) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  anio_registro = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  colaborador_asignado
ORDER BY
  tickets_atendidos DESC
LIMIT 1
[2025-06-18 15:28:58] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
WITH tickets_atendidos_por_colaborador AS (
  SELECT
    colaborador_asignado,
    COUNT(*) AS tickets_atendidos
  FROM ft_tickets_ia
  WHERE
    fecha_registro >= DATE_TRUNC('YEAR', CURRENT_DATE)
    AND estatus_ticket = 'ATENDIDO'
  GROUP BY
    colaborador_asignado
)
SELECT
  colaborador_asignado
FROM tickets_atendidos_por_colaborador
ORDER BY
  tickets_atendidos DESC
LIMIT 1
[2025-06-18 15:30:19] [SQL EXECUTION OK] Tiempo: 0.31s
SQL:
SELECT
  servicio
FROM ft_tickets_ia
WHERE
  mes_registro = EXTRACT(MONTH FROM CURRENT_DATE)
GROUP BY
  servicio
ORDER BY
  COUNT(*) DESC
LIMIT 1
[2025-06-18 15:30:44] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  ciudad AS "Ciudad",
  COUNT(*) AS "Tickets Fuera de Tiempo"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO' AND estatus_atencion = 'FUERA DE TIEMPO'
GROUP BY
  ciudad
ORDER BY
  COUNT(*) DESC
LIMIT 1
[2025-06-18 15:30:59] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  ciudad AS "Ciudad",
  COUNT(*) AS "Tickets Fuera de Tiempo"
FROM ft_tickets_ia
WHERE
  estatus_ticket = 'EN PROCESO' AND estatus_atencion = 'FUERA DE TIEMPO'
GROUP BY
  ciudad
ORDER BY
  COUNT(*) DESC
[2025-06-18 15:31:25] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  area_colaborador_asignado AS "Área",
  COUNT(*) AS "Cantidad de Tickets Abiertos"
FROM ft_tickets_ia
WHERE
  NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL
GROUP BY
  area_colaborador_asignado
ORDER BY
  COUNT(*) DESC
LIMIT 1
[2025-06-18 15:35:16] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  EXTRACT(MONTH FROM fecha_registro) AS mes,
  AVG(CASE WHEN EXTRACT(YEAR FROM fecha_registro) = 2024 THEN 1 ELSE 0 END) AS promedio_tickets
FROM ft_tickets_ia
WHERE
  EXTRACT(YEAR FROM fecha_registro) = 2024
GROUP BY
  EXTRACT(MONTH FROM fecha_registro)
ORDER BY
  EXTRACT(MONTH FROM fecha_registro)
[2025-06-18 15:38:08] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  mes_registro as mes,
  count(folio_ticket) as tickets_por_mes
FROM ft_tickets_ia
where extract(year from fecha_registro) = 2024
group by mes_registro;
[2025-06-18 15:38:48] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  mes_registro as mes,
  count(folio_ticket) as tickets_por_mes
FROM ft_tickets_ia
where extract(year from fecha_registro) = 2024
group by mes_registro;
[2025-06-18 15:39:53] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
with tickets_mensuales as (
  select
    mes_registro as mes,
    count(folio_ticket) as tickets_por_mes
  from ft_tickets_ia
  where extract(year from fecha_registro) = 2024
  group by mes_registro
)
select avg(tickets_por_mes) as promedio_mensual_2024
from tickets_mensuales;
[2025-06-18 15:44:36] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
WITH tickets_mensuales AS (
  SELECT
    EXTRACT(MONTH FROM fecha_registro) AS mes,
    COUNT(*) AS tickets_por_mes
  FROM ft_tickets_ia
  WHERE
    EXTRACT(YEAR FROM fecha_registro) = 2024
  GROUP BY
    EXTRACT(MONTH FROM fecha_registro)
)
SELECT
  AVG(tickets_por_mes) AS promedio_mensual_2024
FROM tickets_mensuales
[2025-06-18 15:45:15] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
WITH tickets_diarios_2024 AS (
  SELECT
    DATE_TRUNC('DAY', fecha_registro) AS fecha,
    COUNT(*) AS tickets_por_dia
  FROM ft_tickets_ia
  WHERE
    EXTRACT(YEAR FROM fecha_registro) = 2024
  GROUP BY
    DATE_TRUNC('DAY', fecha_registro)
)
SELECT
  AVG(tickets_por_dia) AS promedio_diario_tickets_2024
FROM tickets_diarios_2024
[2025-06-18 15:58:05] [SQL EXECUTION ERROR] Tiempo: 0.07s
SQL:
WITH tickets_diarios_anio2024 AS (
  SELECT
    DATE_TRUNC('DAY', fecha_registro) AS fecha,
    folio_ticket,
    COUNT(*) AS tickets_por_dia
  FROM ft_tickets_ia
  WHERE
    estatus_ticket <> 'CANCELADO' AND EXTRACT(YEAR FROM fecha_registro) = 2024
  GROUP BY
    1
)
SELECT
  AVG(tickets_por_dia) AS promedio_diario_2024
FROM tickets_diarios_anio2024
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 4:     folio_ticket,
            ^

[2025-06-18 16:09:26] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
WITH tickets_diarios AS (
  SELECT
    fecha_registro AS fecha,
    COUNT(*) AS tickets_por_dia
  FROM ft_tickets_ia
  WHERE
    EXTRACT(YEAR FROM fecha_registro) = 2024 AND estatus_ticket <> 'CANCELADO'
  GROUP BY
    fecha_registro
)
SELECT
  AVG(tickets_por_dia) AS promedio_diario_2024
FROM tickets_diarios
[2025-06-18 16:10:32] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE) AS semana,
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)) AS tickets_resueltos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE)
Error: el operador no existe: text = boolean
LINE 6:     estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)...
                           ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-18 16:15:33] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE) AS semana,
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)) AS tickets_resueltos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE)
Error: el operador no existe: text = boolean
LINE 6:     estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)...
                           ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-18 16:15:52] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE) AS semana,
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)) AS tickets_resueltos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE)
Error: el operador no existe: text = boolean
LINE 6:     estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)...
                           ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-18 16:23:23] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE) AS semana,
  COUNT(*) FILTER(WHERE
    NOT estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND fecha_cierre IS NULL) AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)) AS tickets_resueltos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE)
Error: el operador no existe: text = boolean
LINE 6:     estatus_ticket IN ('ATENDIDO', NOT fecha_cierre IS NULL)...
                           ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-18 16:26:56] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  (
    SELECT
      COUNT(*) FILTER(WHERE
        estatus_ticket <> 'CANCELADO') AS tickets_registrados
    FROM ft_tickets_ia
    WHERE
      DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1' WEEK)
  ) + (
    SELECT
      COUNT(*) FILTER(WHERE
        estatus_ticket = 'ATENDIDO'
        OR (
          NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
        )) AS tickets_atendidos
    FROM ft_tickets_ia
    WHERE
      DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE)
  ) AS total_tickets
Error: error de sintaxis en o cerca de «WEEK»
LINE 8: ...stro) = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1' WEEK)
                                                                  ^

[2025-06-18 16:34:24] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS semana_pasada,
  COUNT(*) FILTER(WHERE
    estatus_ticket <> 'CANCELADO') AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1' WEEK)
Error: error de sintaxis en o cerca de «WEEK»
LINE 2:   DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS sem...
                                                        ^

[2025-06-18 16:35:22] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS semana_pasada,
  COUNT(*) FILTER(WHERE
    estatus_ticket <> 'CANCELADO') AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1' WEEK)
Error: error de sintaxis en o cerca de «WEEK»
LINE 2:   DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS sem...
                                                        ^

[2025-06-18 16:37:47] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS semana_pasada,
  COUNT(*) FILTER(WHERE
    estatus_ticket <> 'CANCELADO') AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket IN ('ATENDIDO', 'CANCELADO') AND NOT fecha_cierre IS NULL) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1' WEEK)
Error: error de sintaxis en o cerca de «WEEK»
LINE 2:   DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS sem...
                                                        ^

[2025-06-19 09:06:47] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS semana_pasada,
  COUNT(*) FILTER(WHERE
    estatus_ticket <> 'CANCELADO') AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  DATE_TRUNC('WEEK', fecha_registro) = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1' WEEK)
Error: error de sintaxis en o cerca de «WEEK»
LINE 2:   DATE_PART('week', CURRENT_DATE - INTERVAL '1' WEEK) AS sem...
                                                        ^

[2025-06-19 09:36:15] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  EXTRACT(week FROM CURRENT_DATE - INTERVAL '1 WEEK') AS semana_pasada,
  COUNT(*) FILTER(WHERE
    estatus_ticket <> 'CANCELADO') AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  TIMESTAMP_TRUNC(fecha_registro, WEEK) = TIMESTAMP_TRUNC(CURRENT_DATE - INTERVAL '1 WEEK', WEEK)
Error: no existe la columna «week»
LINE 12:   TIMESTAMP_TRUNC(fecha_registro, WEEK) = TIMESTAMP_TRUNC(CU...
                                           ^

[2025-06-19 09:37:42] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  EXTRACT(week FROM CURRENT_DATE - INTERVAL '1' WEEK) AS semana_pasada,
  COUNT(*) FILTER(WHERE
    estatus_ticket <> 'CANCELADO') AS tickets_abiertos,
  COUNT(*) FILTER(WHERE
    estatus_ticket = 'ATENDIDO'
    OR (
      NOT fecha_cierre IS NULL AND NOT estatus_ticket IN ('CANCELADO')
    )) AS tickets_atendidos
FROM ft_tickets_ia
WHERE
  TIMESTAMP_TRUNC(fecha_registro, WEEK) = TIMESTAMP_TRUNC(CURRENT_DATE - INTERVAL '1' WEEK, WEEK)
Error: error de sintaxis en o cerca de «WEEK»
LINE 2:   EXTRACT(week FROM CURRENT_DATE - INTERVAL '1' WEEK) AS sem...
                                                        ^

[2025-06-19 10:35:18] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  DATE_PART('week', CURRENT_DATE - INTERVAL '1 WEEK') AS "semana_pasada",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" <> 'CANCELADO') AS "tickets_abiertos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'ATENDIDO'
    OR (
      NOT "fecha_cierre" IS NULL AND NOT "estatus_ticket" IN ('CANCELADO')
    )) AS "tickets_atendidos"
FROM "ft_tickets_ia"
WHERE
  DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE - INTERVAL '1 WEEK')
[2025-06-19 10:35:56] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
WITH "tickets_mensuales" AS (
  SELECT
    EXTRACT(MONTH FROM "fecha_registro") AS "mes",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS "tickets_por_mes"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2024
  GROUP BY
    EXTRACT(MONTH FROM "fecha_registro")
)
SELECT
  AVG("tickets_por_mes") AS "promedio_mensual_2024"
FROM "tickets_mensuales"
[2025-06-19 10:36:24] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'ATENDIDO'
  AND NOT "fecha_cierre" IS NULL
  AND DATE_PART('day', "fecha_cierre") > DATE_PART('day', "fecha_registro") + 3
[2025-06-19 10:37:05] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:18:41] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_cierre",
    "estatus_ticket",
    "folio_ticket",
    "tiempo_sla_servicio",
    "tiempo_atencion"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_cierre" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion",
  (
    COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio")
  ) AS "tickets_no_cumplidos_sla",
  COUNT(*) AS "total_tickets_cerrados",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS REAL) / CAST(COUNT(*) AS REAL)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 20:       "tiempo_atencion" > "tiempo_sla_servicio")
                                 ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:32:56] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'CERRADO') AS "tickets_cerrados",
  ROUND(
    (
      CAST(100 * COUNT(*) FILTER(WHERE
        "tiempo_atencion" > "tiempo_sla_servicio") AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
        "estatus_ticket" = 'CERRADO')
    ),
    2
  ) AS "porcentaje_tickets_no_cumplidos"
FROM "tickets_trimestre"
GROUP BY
  "fecha_registro",
  "estatus_ticket",
  "tiempo_atencion",
  "tiempo_sla_servicio"
ORDER BY
  "porcentaje_tickets_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 14:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:34:09] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:38:32] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:42:15] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:47:12] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "tiempo_atencion" <= "tiempo_sla_servicio")
  ) AS "porcentaje_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 15:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:47:36] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:55:20] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:56:21] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_cierre",
    "estatus_ticket",
    "folio_ticket",
    "tiempo_sla_servicio",
    "tiempo_atencion"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_cierre" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion",
  (
    COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio")
  ) AS "tickets_no_cumplidos_sla",
  COUNT(*) AS "total_tickets_cerrados",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS REAL) / CAST(COUNT(*) AS REAL)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 20:       "tiempo_atencion" > "tiempo_sla_servicio")
                                 ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 11:58:16] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_cierre",
    "estatus_ticket",
    "folio_ticket",
    "tiempo_sla_servicio",
    "tiempo_atencion"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_cierre" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion",
  (
    COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio")
  ) AS "tickets_no_cumplidos_sla",
  COUNT(*) AS "total_tickets_cerrados",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS REAL) / CAST(COUNT(*) AS REAL)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 20:       "tiempo_atencion" > "tiempo_sla_servicio")
                                 ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 12:02:27] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_sla_servicio",
    "tiempo_atencion"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  ROUND(
    CAST(100 * COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      NOT "fecha_cierre" IS NULL),
    2
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 15:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 12:19:06] [SQL EXECUTION ERROR] Tiempo: 0.10s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'CERRADO') AS "tickets_cerrados",
  ROUND(
    CAST(100.0 * COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'CERRADO'),
    2
  ) AS "porcentaje_tickets_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_tickets_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 14:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 13:55:56] [SQL EXECUTION ERROR] Tiempo: 0.09s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 13:57:24] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:02:36] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:10:40] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:11:32] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:12:15] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:12:43] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:13:58] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:14:44] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:17:07] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:19:39] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:21:17] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_cierre",
    "estatus_ticket",
    "folio_ticket",
    "tiempo_sla_servicio",
    "tiempo_atencion"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_cierre" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion",
  (
    COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio")
  ) AS "tickets_no_cumplidos_sla",
  COUNT(*) AS "total_tickets_cerrados",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS REAL) / CAST(COUNT(*) AS REAL)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "fecha_cierre",
  "folio_ticket",
  "tiempo_sla_servicio",
  "tiempo_atencion"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 20:       "tiempo_atencion" > "tiempo_sla_servicio")
                                 ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:21:42] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:22:56] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:54:33] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:57:03] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "tiempo_atencion" <= "tiempo_sla_servicio")
  ) AS "porcentaje_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 15:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 15:59:13] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_cerrados_trimestre" AS (
  SELECT
    "fecha_registro",
    "folio_ticket",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  "folio_ticket",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos_sla",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos_sla",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*)
  ) AS "porcentaje_tickets_no_cumplidos_sla"
FROM "tickets_cerrados_trimestre"
GROUP BY
  "folio_ticket"
ORDER BY
  "porcentaje_tickets_no_cumplidos_sla" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 17:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:00:32] [SQL EXECUTION ERROR] Tiempo: 4.40s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'CERRADO') AS "tickets_cerrados",
  ROUND(
    CAST(100.0 * COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'CERRADO'),
    2
  ) AS "porcentaje_tickets_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_tickets_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 14:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:05:50] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'CERRADO') AS "tickets_cerrados",
  ROUND(
    CAST(100.0 * COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'CERRADO'),
    2
  ) AS "porcentaje_tickets_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_tickets_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 14:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:06:11] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "tiempo_atencion" <= "tiempo_sla_servicio")
  ) AS "porcentaje_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 15:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:10:48] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_trimestre" AS (
  SELECT
    "fecha_registro",
    "estatus_ticket",
    "tiempo_atencion",
    "tiempo_sla_servicio"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '3 MONTHS'
    AND NOT "fecha_cierre" IS NULL
    AND "estatus_ticket" = 'CERRADO'
)
SELECT
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_no_cumplidos",
  COUNT(*) FILTER(WHERE
    "tiempo_atencion" <= "tiempo_sla_servicio") AS "tickets_cumplidos",
  (
    CAST(COUNT(*) FILTER(WHERE
      "tiempo_atencion" > "tiempo_sla_servicio") * 100.0 AS DOUBLE PRECISION) / COUNT(*) FILTER(WHERE
      "tiempo_atencion" <= "tiempo_sla_servicio")
  ) AS "porcentaje_no_cumplidos"
FROM "tickets_trimestre"
ORDER BY
  "porcentaje_no_cumplidos" DESC NULLS LAST
LIMIT 5
Error: el operador no existe: text > double precision
LINE 15:     "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_n...
                               ^
HINT:  Ningún operador coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:13:33] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
Error: no existe la función sum(text)
LINE 3:   SUM("tiempo_atencion") AS "tiempo_atencion_total",
          ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:15:05] [SQL EXECUTION ERROR] Tiempo: 0.90s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
Error: no existe la función sum(text)
LINE 3:   SUM("tiempo_atencion") AS "tiempo_atencion_total",
          ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 16:22:31] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
[2025-06-19 16:22:54] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
[2025-06-19 16:23:15] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
[2025-06-19 16:23:45] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
[2025-06-19 17:06:34] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  "servicio" AS "servicio_calculado",
  SUM("tiempo_atencion") AS "tiempo_atencion_total",
  COUNT(*) AS "tickets_total",
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "servicio"
[2025-06-19 17:06:55] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  ROUND(
    CAST((
      CAST(COUNT(*) FILTER(WHERE
        "estatus_atencion" = 'EN TIEMPO') * 100.0 AS DOUBLE PRECISION) / COUNT(*)
    ) AS DECIMAL),
    2
  ) AS "porcentaje_tickets_atendidos_en_tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'ATENDIDO' AND NOT "fecha_cierre" IS NULL
[2025-06-19 17:07:39] [SQL EXECUTION OK] Tiempo: 0.20s
SQL:
SELECT
  ROUND(
    CAST((
      CAST(COUNT(*) FILTER(WHERE
        "estatus_atencion" = 'A TIEMPO') * 100.0 AS DOUBLE PRECISION) / COUNT(*)
    ) AS DECIMAL),
    2
  ) AS "porcentaje_tickets_atendidos_en_tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'ATENDIDO' AND NOT "fecha_cierre" IS NULL
[2025-06-19 17:08:35] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  ROUND(
    CAST((
      CAST(COUNT(*) FILTER(WHERE
        "estatus_atencion" = 'TIEMPO') * 100.0 AS DOUBLE PRECISION) / COUNT(*)
    ) AS DECIMAL),
    2
  ) AS "porcentaje_tickets_atendidos_en_tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'ATENDIDO' AND NOT "fecha_cierre" IS NULL
[2025-06-19 17:26:06] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  CAST(COUNT(*) FILTER(WHERE
    "estatus_atencion" = 'TIEMPO') AS REAL) / CAST(COUNT(*) FILTER(WHERE
    "estatus_ticket" IN ('EN PROCESO', 'ATENDIDO')) AS REAL) AS "porcentaje_tickets_atendidos_en_tiempo"
FROM "ft_tickets_ia"
WHERE
  NOT "fecha_cierre" IS NULL
[2025-06-19 17:26:47] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  "total_tickets"
FROM "tiempo_solucion"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
LIMIT 3
Error: la columna «tiempo_solucion.centro_trabajo» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 13:   "centro_trabajo",
           ^

[2025-06-19 17:27:31] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  "total_tickets"
FROM "tiempo_solucion"
GROUP BY "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
LIMIT 3
Error: la columna «tiempo_solucion.total_tickets» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 15:   "total_tickets"
           ^

[2025-06-19 17:27:35] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  "total_tickets"
FROM "tiempo_solucion"
GROUP BY  "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
LIMIT 3
Error: la columna «tiempo_solucion.total_tickets» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 15:   "total_tickets"
           ^

[2025-06-19 17:31:23] [SQL EXECUTION ERROR] Tiempo: 0.02s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  "total_tickets"
FROM "tiempo_solucion"
GROUP BY  "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
Error: la columna «tiempo_solucion.total_tickets» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 15:   "total_tickets"
           ^

[2025-06-19 17:31:32] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  "total_tickets"
FROM "tiempo_solucion"
GROUP BY
  "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
Error: la columna «tiempo_solucion.total_tickets» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 15:   "total_tickets"
           ^

[2025-06-19 17:32:09] [SQL EXECUTION OK] Tiempo: 0.35s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  SUM("total_tickets") AS "total_tickets"
FROM "tiempo_solucion"
GROUP BY
  "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
[2025-06-19 17:35:23] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  SUM("total_tickets") AS "total_tickets"
FROM "tiempo_solucion"
GROUP BY
  "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
[2025-06-19 17:35:35] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
WITH "tiempo_solucion" AS (
  SELECT
    "centro_trabajo",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "centro_trabajo"
)
SELECT
  "centro_trabajo",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  SUM("total_tickets") AS "total_tickets"
FROM "tiempo_solucion"
GROUP BY
  "centro_trabajo"
ORDER BY
  "promedio_tiempo_solucion" DESC NULLS LAST
[2025-06-19 17:36:53] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  "servicio",
  ROUND(100 * (
    CAST("tiempo_atencion" AS DOUBLE PRECISION) / "tiempo_sla_servicio"
  ), 2) AS "porcentaje_incumplimiento_sla"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" IN ('ATENDIDO', 'EN PROCESO') AND NOT "fecha_cierre" IS NULL
GROUP BY
  "servicio",
  "tiempo_atencion",
  "tiempo_sla_servicio"
ORDER BY
  "porcentaje_incumplimiento_sla" DESC NULLS LAST
LIMIT 10
Error: no existe la función round(double precision, integer)
LINE 3:   ROUND(100 * (
          ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 17:37:19] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  "servicio",
  ROUND(100 * (
    CAST("tiempo_atencion" AS DOUBLE PRECISION) / "tiempo_sla_servicio"
  ), 2) AS "porcentaje_incumplimiento_sla"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" IN ('ATENDIDO', 'EN PROCESO') AND NOT "fecha_cierre" IS NULL
GROUP BY
  "servicio",
  "tiempo_atencion",
  "tiempo_sla_servicio"
ORDER BY
  "porcentaje_incumplimiento_sla" DESC NULLS LAST
LIMIT 10
Error: no existe la función round(double precision, integer)
LINE 3:   ROUND(100 * (
          ^
HINT:  Ninguna función coincide en el nombre y tipos de argumentos. Puede ser necesario agregar conversión explícita de tipos.

[2025-06-19 17:42:52] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "servicio",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS REAL) AS "tickets_fuera_tiempo",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS REAL) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "servicio"
)
SELECT
  "servicio",
  CAST((
    CAST("tickets_fuera_tiempo" AS DOUBLE PRECISION) / NULLIF("total_tickets", 0) * 100
  ) AS REAL) AS "tasa_cumplimiento"
FROM "indicadores_tickets"
ORDER BY
  "tasa_cumplimiento" ASC
[2025-06-19 17:44:00] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "servicio",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS REAL) AS "tickets_fuera_tiempo",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS REAL) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "servicio"
)
SELECT
  "servicio",
  CAST((
    CAST("tickets_fuera_tiempo" AS DOUBLE PRECISION) / NULLIF("total_tickets", 0) * 100
  ) AS REAL) AS "tasa_cumplimiento"
FROM "indicadores_tickets"
ORDER BY
  "tasa_cumplimiento" ASC NULLS FIRST
[2025-06-19 17:44:09] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "servicio",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS REAL) AS "tickets_fuera_tiempo",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS REAL) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "servicio"
)
SELECT
  "servicio",
  CAST((
    CAST("tickets_fuera_tiempo" AS DOUBLE PRECISION) / NULLIF("total_tickets", 0) * 100
  ) AS REAL) AS "tasa_cumplimiento"
FROM "indicadores_tickets"
ORDER BY
  "tasa_cumplimiento" ASC NULLS FIRST
[2025-06-19 17:44:20] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "servicio",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS REAL) AS "tickets_fuera_tiempo",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS REAL) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "servicio"
)
SELECT
  "servicio",
  CAST((
    CAST("tickets_fuera_tiempo" AS DOUBLE PRECISION) / NULLIF("total_tickets", 0) * 100
  ) AS REAL) AS "tasa_cumplimiento"
FROM "indicadores_tickets"
ORDER BY
  "tasa_cumplimiento" ASC
[2025-06-19 17:48:30] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
WITH "tiempo_solucion_por_colaborador" AS (
  SELECT
    "colaborador_asignado",
    "personal_reporta",
    SUM("fecha_cierre" - "fecha_registro") AS "tiempo_total",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "colaborador_asignado",
    "personal_reporta"
)
SELECT
  "colaborador_asignado",
  "personal_reporta",
  AVG("tiempo_total") AS "promedio_tiempo_solucion",
  ROW_NUMBER() OVER (ORDER BY AVG("tiempo_total") ASC NULLS FIRST) AS "rank"
FROM "tiempo_solucion_por_colaborador"
WHERE
  ROW_NUMBER() OVER (ORDER BY AVG("tiempo_total") ASC NULLS FIRST) <= 5
GROUP BY
  "colaborador_asignado",
  "personal_reporta"
ORDER BY
  "promedio_tiempo_solucion" ASC
Error: no se permiten funciones de ventana deslizante en WHERE
LINE 21:   ROW_NUMBER() OVER (ORDER BY AVG("tiempo_total") ASC NULLS ...
           ^

[2025-06-19 17:50:22] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "colaborador_asignado",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS REAL) AS "tickets_fuera_tiempo",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS REAL) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "colaborador_asignado",
  CAST((
    CAST("tickets_fuera_tiempo" AS DOUBLE PRECISION) / NULLIF("total_tickets", 0) * 100
  ) AS REAL) AS "tasa_cumplimiento"
FROM "indicadores_tickets"
ORDER BY
  "tasa_cumplimiento" DESC NULLS LAST
LIMIT 5
[2025-06-19 17:50:42] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "colaborador_asignado",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS REAL) AS "tickets_fuera_tiempo",
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS REAL) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "colaborador_asignado",
  CAST((
    CAST("tickets_fuera_tiempo" AS DOUBLE PRECISION) / NULLIF("total_tickets", 0) * 100
  ) AS REAL) AS "tasa_cumplimiento"
FROM "indicadores_tickets"
ORDER BY
  "tasa_cumplimiento" DESC NULLS LAST
LIMIT 5
[2025-06-19 17:51:32] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "colaborador_asignado",
    "personal_reporta",
    AVG("tiempo_solucion_total") AS "tiempo_promedio_solucion"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" <> 'CANCELADO'
  GROUP BY
    "colaborador_asignado",
    "personal_reporta"
)
SELECT
  "colaborador_asignado",
  "personal_reporta",
  "tiempo_promedio_solucion"
FROM "indicadores_tickets"
ORDER BY
  "tiempo_promedio_solucion" NULLS FIRST
LIMIT 20
[2025-06-19 17:51:54] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "colaborador_asignado",
    AVG("tiempo_solucion_total") AS "tiempo_promedio_solucion"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" <> 'CANCELADO'
  GROUP BY
    "colaborador_asignado",
    "personal_reporta"
)
SELECT
  "colaborador_asignado",
  "tiempo_promedio_solucion"
FROM "indicadores_tickets"
ORDER BY
  "tiempo_promedio_solucion" NULLS FIRST
LIMIT 20
[2025-06-19 17:52:09] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "colaborador_asignado",
    AVG("tiempo_solucion_total") AS "tiempo_promedio_solucion"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" <> 'CANCELADO'
  GROUP BY
    "colaborador_asignado",
    "personal_reporta"
)
SELECT
  "colaborador_asignado",
  "tiempo_promedio_solucion"
FROM "indicadores_tickets"
ORDER BY
  "tiempo_promedio_solucion"
LIMIT 20
[2025-06-19 17:56:20] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
WITH "indicadores_tickets" AS (
  SELECT
    "colaborador_asignado",
    AVG("tiempo_solucion_total") AS "tiempo_promedio_solucion"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" <> 'CANCELADO'
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "colaborador_asignado",
  "tiempo_promedio_solucion"
FROM "indicadores_tickets"
ORDER BY
  "tiempo_promedio_solucion" NULLS FIRST
LIMIT 10
[2025-06-19 17:57:15] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  "personal_reporta",
  "fecha_registro",
  "folio_ticket"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
GROUP BY
  "personal_reporta",
  "fecha_registro",
  "folio_ticket"
ORDER BY
  "fecha_registro" DESC NULLS LAST
[2025-06-19 17:57:50] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  "personal_reporta" AS "Usuario",
  "folio_ticket",
  "fecha_registro",
  "estatus_ticket"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND "fecha_registro" = (
    SELECT
      MAX("fecha_registro")
    FROM "ft_tickets_ia"
    WHERE
      "personal_reporta" = "t"."personal_reporta"
      AND NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
      AND "fecha_cierre" IS NULL
  )
ORDER BY
  "personal_reporta" NULLS FIRST
Error: falta una entrada para la tabla «t» en la cláusula FROM
LINE 15:       "personal_reporta" = "t"."personal_reporta"
                                    ^

[2025-06-19 17:58:13] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  "personal_reporta",
  "fecha_registro",
  "folio_ticket"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
GROUP BY
  "personal_reporta",
  "fecha_registro",
  "folio_ticket"
ORDER BY
  "fecha_registro" DESC NULLS LAST
[2025-06-19 17:59:14] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "personal_reporta" AS "usuario",
  MAX("folio_ticket") AS "ultimo_ticket"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
GROUP BY
  "personal_reporta"
ORDER BY
  "personal_reporta" NULLS FIRST
[2025-06-19 18:00:46] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  "personal_reporta" AS "usuario",
  "departamento_colaborador_asignado" AS "departamento",
  "colaborador_asignado" AS "colaborador",
  "estatus_ticket" AS "estatus",
  "fecha_registro" AS "fecha_registro",
  CASE
    WHEN "tiempo_atencion" <= "tiempo_sla_servicio"
    THEN 'EN TIEMPO'
    WHEN "tiempo_atencion" > "tiempo_sla_servicio"
    THEN 'FUERA DE TIEMPO'
    ELSE 'POR VENCER'
  END AS "estatus_atencion"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
GROUP BY
  "personal_reporta",
  "departamento_colaborador_asignado",
  "colaborador_asignado",
  "estatus_ticket"
ORDER BY
  "personal_reporta" NULLS FIRST
Error: la columna «ft_tickets_ia.fecha_registro» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 6:   "fecha_registro" AS "fecha_registro",
          ^

[2025-06-20 09:12:42] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  "servicio",
  "estatus_ticket",
  "folio_ticket",
  "fecha_registro"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
GROUP BY
  "servicio",
  "estatus_ticket"
ORDER BY
  "servicio" NULLS FIRST,
  "fecha_registro" ASC NULLS FIRST
LIMIT 1
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 4:   "folio_ticket",
          ^

[2025-06-20 09:16:06] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  "motivo_cierre_ticket" AS "motivo_mas_frecuente",
  COUNT(*) AS "cantidad"
FROM "ft_tickets_ia"
WHERE
  "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '1 MONTH'
  AND "fecha_registro" < DATE_TRUNC('MONTH', CURRENT_DATE) /* Filtrar tickets del mes actual */
  AND NOT "fecha_cierre" IS NULL /* Filtrar solo tickets cerrados */
GROUP BY
  "motivo_cierre_ticket"
ORDER BY
  "cantidad" DESC NULLS LAST
LIMIT 1
[2025-06-20 10:21:43] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
  AND "estatus_ticket" = 'ATENDIDO'
  AND NOT "fecha_cierre" IS NULL
[2025-06-20 10:22:56] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) AS "Tickets Atendidos"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'ATENDIDO'
  AND "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST
[2025-06-20 11:01:38] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "personal_reporta"
HAVING
  COUNT(*) <= (
    SELECT
      COUNT(DISTINCT "personal_reporta")
    FROM "ft_tickets_ia"
    WHERE
      "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
      AND COUNT(*) <= (
        SELECT
          AVG(COUNT(*))
        FROM "ft_tickets_ia"
        WHERE
          "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
        GROUP BY
          "personal_reporta"
      )
  )
ORDER BY
  COUNT(*) DESC NULLS LAST
LIMIT 1
Error: no se permiten funciones de agregación en WHERE
LINE 15:       AND COUNT(*) <= (
                   ^

[2025-06-20 11:02:02] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "motivo_ticket" = 'BAJA DE USUARIO'
[2025-06-20 11:02:14] [SQL EXECUTION OK] Tiempo: 0.19s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "motivo_ticket" ILIKE '%BAJA DE USUARIO%'
[2025-06-20 11:02:28] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "motivo_ticket" ILIKE '%BAJA DE USUARIO%'
[2025-06-20 11:02:37] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  *
FROM "ft_tickets_ia"
WHERE
  "motivo_ticket" ILIKE '%BAJA DE USUARIO%'
[2025-06-20 11:03:10] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "servicio" LIKE '%BAJA DE USUARIO%'
[2025-06-20 11:03:24] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "servicio" LIKE '%BAJA%USUARIO%'
[2025-06-20 11:03:31] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "servicio" LIKE '%BAJA%USUARIO%'
[2025-06-20 11:03:37] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  *
FROM "ft_tickets_ia"
WHERE
  "servicio" LIKE '%BAJA%USUARIO%'
[2025-06-20 11:04:51] [SQL EXECUTION ERROR] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  CAST("fecha_registro" AS YEAR) = "CURRENT_YEAR"
  AND "estatus_ticket" = 'EN PROCESO'
  AND "personal_reporta" = 'DANIEL IBARRA'
Error: no existe el tipo «year»
LINE 5:   CAST("fecha_registro" AS YEAR) = "CURRENT_YEAR"
                                   ^

[2025-06-20 12:03:28] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
[2025-06-20 12:03:55] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
[2025-06-20 12:04:26] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "colaborador_asignado" = 'Daniel Ibarra')
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
[2025-06-20 12:04:59] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  "folio_ticket",
  "fecha_registro",
  "estatus_ticket",
  "sistema",
  "motivo_ticket",
  "colaborador_asignado"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
[2025-06-20 12:05:26] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  *
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
[2025-06-20 12:09:19] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "fecha_cierre" IS NULL
  AND "fecha_cierre" <= CURRENT_DATE
  AND "fecha_registro" < CURRENT_DATE
[2025-06-20 12:10:21] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "fecha_cierre" = CURRENT_DATE AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 12:11:13] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
WITH "tickets_fuera_de_tiempo_por_colaborador" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) FILTER(WHERE
      "estatus_atencion" = 'FUERA DE TIEMPO') AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('YEAR', CURRENT_DATE)
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "colaborador_asignado"
FROM "tickets_fuera_de_tiempo_por_colaborador"
ORDER BY
  "tickets_fuera_de_tiempo" DESC NULLS LAST
LIMIT 5
[2025-06-20 12:11:43] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT DISTINCT
  "colaborador_asignado",
  COUNT(*) AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_atencion" = 'FUERA DE TIEMPO'
GROUP BY
  "colaborador_asignado"
ORDER BY
  "tickets_fuera_de_tiempo" DESC NULLS LAST
[2025-06-20 12:12:39] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%JULIO%CHAVEZ%'
[2025-06-20 12:13:00] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%JULIO%CHAVEZ%'
[2025-06-20 12:13:27] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  *
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%JULIO%CHAVEZ%'
[2025-06-20 12:14:21] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  "unidad_negocio",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "unidad_negocio"
[2025-06-20 12:29:08] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  "unidad_negocio",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "unidad_negocio"
[2025-06-20 12:29:46] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  "unidad_negocio",
  "empresa",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "unidad_negocio",
  "empresa"
[2025-06-20 12:34:32] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  AVG("tiempo_atencion") AS "promedio_tiempo_atencion"
FROM "ft_tickets_ia"
WHERE
  "unidad_negocio" = 'CONSTRUCCIÓN'
  AND EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
  "unidad_negocio"
[2025-06-20 12:44:04] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 12:46:32] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 12:48:45] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 12:49:12] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 12:49:31] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
[2025-06-20 12:52:37] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 12:53:47] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 12:58:12] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención",
  "colaborador_asignado" AS "Colaborador",
  "departamento_colaborador_asignado" AS "Departamento"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 12:59:05] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención",
  "colaborador_asignado" AS "Colaborador",
  "departamento_colaborador_asignado" AS "Departamento",
  "servicio" AS "Servicio"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 13:00:28] [SQL EXECUTION OK] Tiempo: 2.30s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención",
  "colaborador_asignado" AS "Colaborador",
  "departamento_colaborador_asignado" AS "Departamento",
  "servicio" AS "Servicio"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 13:02:47] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención",
  "colaborador_asignado" AS "Colaborador",
  "departamento_colaborador_asignado" AS "Departamento",
  "servicio" AS "Servicio"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 13:19:08] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención",
  "colaborador_asignado" AS "Colaborador",
  "departamento_colaborador_asignado" AS "Departamento",
  "servicio" AS "Servicio"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 13:19:38] [SQL EXECUTION OK] Tiempo: 0.03s
SQL:
SELECT
  "folio_ticket" AS "Ticket ID",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de atención"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 13:40:55] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) AS "Tickets Abiertos"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST
[2025-06-20 13:42:32] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) AS "Tickets Abiertos"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST
[2025-06-20 13:48:35] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) AS "Tickets Abiertos"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST
[2025-06-20 13:59:18] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
[2025-06-20 14:07:49] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  DATE_PART('day', CURRENT_DATE) AS "dia_actual",
  DATE_PART('year', CURRENT_DATE) AS "año_actual",
  DATE_PART('month', CURRENT_DATE) AS "mes_actual",
  COUNT(*) AS "tickets_cerrados"
FROM "ft_tickets_ia"
WHERE
  NOT "fecha_cierre" IS NULL
  AND CAST(DATE_TRUNC('DAY', "fecha_cierre") AS DATE) = CAST(DATE_TRUNC('DAY', CURRENT_DATE) AS DATE)
  AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 14:50:49] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-20 15:22:12] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
  AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 15:22:56] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
  AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 15:23:34] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
  AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 15:25:06] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND "fecha_registro" = CURRENT_DATE
[2025-06-20 15:26:08] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND "fecha_registro" = CURRENT_DATE
[2025-06-20 15:28:32] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 15:31:47] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) AS "Tickets Abiertos"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST
[2025-06-20 15:35:53] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  "folio_ticket",
  "fecha_registro"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
ORDER BY
  "fecha_registro" ASC NULLS FIRST
LIMIT 1
[2025-06-20 15:36:33] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  EXTRACT(YEAR FROM "fecha_registro") = 2024 AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 15:45:25] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_junio_2025" AS (
  SELECT
    COUNT(*) AS "tickets_registrados",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
    AND EXTRACT(MONTH FROM "fecha_registro") = 6
), "promedio" AS (
  SELECT
    CAST(AVG("tickets_atendidos") AS REAL) AS "promedio_atendidos",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
    AND EXTRACT(MONTH FROM "fecha_registro") = 6
)
SELECT
  (
    CAST("promedio_atendidos" AS DOUBLE PRECISION) / "total_tickets"
  ) * 100 AS "porcentaje_atendidos"
FROM "promedio"
Error: no existe la columna «tickets_atendidos»
LINE 12:     CAST(AVG("tickets_atendidos") AS REAL) AS "promedio_aten...
                      ^

[2025-06-20 15:49:44] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
WITH "tickets_junio_2025" AS (
  SELECT
    COUNT(*) AS "tickets_registrados",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
    AND EXTRACT(MONTH FROM "fecha_registro") = 6
), "promedio_atendidos" AS (
  SELECT
    CAST(AVG("tickets_atendidos") AS REAL) AS "promedio_atendidos"
  FROM "tickets_junio_2025"
)
SELECT
  (
    CAST("promedio_atendidos"."promedio_atendidos" AS DOUBLE PRECISION) / "tickets_junio_2025"."tickets_registrados"
  ) * 100 AS "porcentaje_atendidos"
FROM "tickets_junio_2025"
JOIN "promedio_atendidos"
  ON TRUE
[2025-06-20 15:51:05] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
WITH "tickets_junio_2025" AS (
  SELECT
    COUNT(*) AS "tickets_registrados",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
    AND EXTRACT(MONTH FROM "fecha_registro") = 6
), "promedio_atendidos" AS (
  SELECT
    CAST(AVG("tickets_atendidos") AS REAL) AS "promedio_atendidos"
  FROM "tickets_junio_2025"
)
SELECT
  (
    CAST("promedio_atendidos"."promedio_atendidos" AS DOUBLE PRECISION) / "tickets_junio_2025"."tickets_registrados"
  ) * 100 AS "porcentaje_atendidos"
FROM "tickets_junio_2025"
JOIN "promedio_atendidos"
  ON TRUE
[2025-06-20 15:53:23] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*) AS "tickets_atendidos"
FROM "ft_tickets_ia" AS "tks"
WHERE
  "anio_registro" = 2025
  AND (
    "tks"."estatus_ticket" = 'ATENDIDO'
    OR (
      NOT "tks"."fecha_cierre" IS NULL AND "tks"."estatus_ticket" <> 'CANCELADO'
    )
  )
[2025-06-20 15:54:41] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_atendidos_por_año" AS (
  SELECT
    EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
    COUNT(*) FILTER(WHERE
      "tks"."estatus_ticket" = 'ATENDIDO'
      AND EXTRACT(YEAR FROM "tks"."fecha_registro") = 2025) AS "tickets_atendidos"
  FROM "ft_tickets_ia" AS "tks"
)
SELECT
  "tickets_atendidos"
FROM "tickets_atendidos_por_año"
Error: la columna «tks.fecha_registro» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:     EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
                              ^

[2025-06-20 15:57:30] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
WITH "tickets_atendidos_por_año" AS (
  SELECT
    EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
    COUNT(*) FILTER(WHERE
      "tks"."estatus_ticket" = 'ATENDIDO'
      AND EXTRACT(YEAR FROM "tks"."fecha_registro") = 2025) AS "tickets_atendidos"
  FROM "ft_tickets_ia" AS "tks"
)
SELECT
  "tickets_atendidos"
FROM "tickets_atendidos_por_año"
Error: la columna «tks.fecha_registro» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:     EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
                              ^

[2025-06-20 15:59:51] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*) AS "tickets_atendidos"
FROM "ft_tickets_ia" AS "tks"
WHERE
  "anio_registro" = 2025
  AND (
    "tks"."estatus_ticket" = 'ATENDIDO'
    OR (
      NOT "tks"."fecha_cierre" IS NULL AND "tks"."estatus_ticket" <> 'CANCELADO'
    )
  )
[2025-06-20 16:00:30] [SQL EXECUTION ERROR] Tiempo: 1.60s
SQL:
WITH "tickets_atendidos_por_año" AS (
  SELECT
    EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
    COUNT(*) FILTER(WHERE
      "tks"."estatus_ticket" = 'ATENDIDO'
      AND EXTRACT(YEAR FROM "tks"."fecha_registro") = 2025) AS "tickets_atendidos"
  FROM "ft_tickets_ia" AS "tks"
)
SELECT
  "tickets_atendidos"
FROM "tickets_atendidos_por_año"
Error: la columna «tks.fecha_registro» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:     EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
                              ^

[2025-06-20 16:00:59] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*) AS "tickets_atendidos"
FROM "ft_tickets_ia" AS "tks"
WHERE
  "anio_registro" = 2025
  AND (
    "tks"."estatus_ticket" = 'ATENDIDO'
    OR (
      NOT "tks"."fecha_cierre" IS NULL AND "tks"."estatus_ticket" <> 'CANCELADO'
    )
  )
[2025-06-20 16:06:22] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  EXTRACT(MONTH FROM "fecha_registro") = 6
  AND EXTRACT(YEAR FROM "fecha_registro") = 2025
[2025-06-20 16:08:06] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  AND "estatus_ticket" <> 'CANCELADO'
[2025-06-20 16:14:40] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "colaborador_asignado" = 'Yaneli Mendiola'
[2025-06-20 16:22:52] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
[2025-06-20 16:23:23] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) AS "Cantidad de Tickets en Proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  COUNT(*) DESC NULLS LAST
[2025-06-20 16:41:14] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "departamento_colaborador_asignado" = 'SOPORTE'
  AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado"
[2025-06-20 16:41:41] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso_soporte"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "departamento_colaborador_asignado" = 'Soporte'
[2025-06-20 16:48:24] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
[2025-06-20 16:52:03] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  CAST((
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS DECIMAL) / CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS DECIMAL) * 100
  ) AS DECIMAL(5, 2)) AS "porcentaje_tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
WHERE
  "fecha_registro" >= DATE_TRUNC('YEAR', CURRENT_DATE)
[2025-06-20 16:54:16] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 16:55:08] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-20 16:57:10] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
WITH "tickets_en_proceso_y_fuera_de_tiempo" AS (
  SELECT
    "colaborador_asignado",
    "folio_ticket",
    CASE WHEN "estatus_atencion" = 'FUERA DE TIEMPO' THEN 1 ELSE 0 END AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
)
SELECT
  "colaborador_asignado",
  COUNT(*) AS "tickets_en_proceso",
  SUM("tickets_fuera_de_tiempo") AS "tickets_fuera_de_tiempo"
FROM "tickets_en_proceso_y_fuera_de_tiempo"
GROUP BY
  "colaborador_asignado"
ORDER BY
  "tickets_fuera_de_tiempo" DESC NULLS LAST,
  "tickets_en_proceso" DESC NULLS LAST
LIMIT 1
[2025-06-20 16:57:46] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
WITH "tickets_en_proceso_y_fuera_de_tiempo" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "colaborador_asignado",
  "tickets_en_proceso",
  "tickets_fuera_de_tiempo"
FROM "tickets_en_proceso_y_fuera_de_tiempo"
ORDER BY
  "tickets_fuera_de_tiempo" NULLS FIRST
LIMIT 1
[2025-06-20 16:58:29] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "fecha_registro" >= DATE_TRUNC('YEAR', CURRENT_DATE) /* Filtrar por el año actual */
  AND "estatus_ticket" = 'ATENDIDO' /* Filtrar por el estatus de "Atendido" */
  AND "personal_reporta" = 'Elizabeth Silva'
[2025-06-20 16:59:18] [SQL EXECUTION ERROR] Tiempo: 0.07s
SQL:
WITH "tickets_elizabeth_silva" AS (
  SELECT
    COUNT(*) AS "total_tickets",
    'Total de tickets atendidos' AS "ticket_category"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
    AND "personal_reporta" = 'Elizabeth Silva'
), "tickets_atendidos_elizabeth_silva" AS (
  SELECT
    COUNT(*) AS "tickets_atendidos",
    'Tickets atendidos por Elizabeth Silva' AS "ticket_category"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
    AND "personal_reporta" = 'Elizabeth Silva'
    AND "estatus_ticket" = 'ATENDIDO'
)
SELECT
  "tickets_atendidos"."tickets_atendidos",
  "tickets_atendidos"."ticket_category",
  (
    CAST("tickets_atendidos"."tickets_atendidos" AS REAL) / "tickets_elizabeth_silva"."total_tickets"
  ) AS "proporcion_tickets_atendidos"
FROM "tickets_atendidos_elizabeth_silva", "tickets_elizabeth_silva"
ORDER BY
  "proporcion_tickets_atendidos" DESC NULLS LAST
LIMIT 5
Error: falta una entrada para la tabla «tickets_atendidos» en la cláusula FROM
LINE 20:   "tickets_atendidos"."tickets_atendidos",
           ^

[2025-06-20 17:00:23] [SQL EXECUTION OK] Tiempo: 3.80s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "fecha_registro" >= DATE_TRUNC('YEAR', CURRENT_DATE) /* Filtra por el año actual */
  AND "estatus_ticket" = 'ATENDIDO' /* Filtra por el estatus de atendido */
  AND "personal_reporta" = 'Elizabeth'
[2025-06-20 17:01:16] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "colaborador_asignado" ILIKE '%BERENICE FERNÁNDEZ%'
[2025-06-20 17:02:03] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "colaborador_asignado" ILIKE '%BERENICE%'
[2025-06-20 17:03:29] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "colaborador_asignado" ILIKE '%BERENICE FERNANDEZ%'
[2025-06-20 17:41:14] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-20 17:46:06] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
[2025-06-20 17:47:28] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
[2025-06-20 17:53:32] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-21 12:14:34] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-21 12:15:40] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) AS "Tickets En Proceso y Fuera de Tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-21 12:20:26] [SQL EXECUTION OK] Tiempo: 0.21s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets en proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "Tickets fuera de tiempo"
FROM "ft_tickets_ia"
WHERE
  "departamento_colaborador_asignado" = 'Centro de Atención a Usuarios'
GROUP BY
  "departamento_colaborador_asignado"
[2025-06-21 12:21:24] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
[2025-06-21 12:22:28] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-21 12:23:26] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-21 12:28:06] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  COUNT(*) AS "ticket_count",
  "colaborador_asignado" AS "colaborador",
  "fecha_registro" AS "fecha",
  "estatus_ticket" AS "estatus"
FROM "ft_tickets_ia"
WHERE
  "departamento_colaborador_asignado" = 'Servidores y Plataformas'
GROUP BY
  "colaborador_asignado",
  "fecha_registro",
  "estatus_ticket"
ORDER BY
  "fecha_registro" NULLS FIRST
[2025-06-21 12:29:03] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  "fecha_registro",
  "folio_ticket",
  "area_colaborador_asignado" AS "area"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND "area_colaborador_asignado" LIKE '%SERVIDORES%'
GROUP BY
  "fecha_registro",
  "area_colaborador_asignado"
ORDER BY
  "fecha_registro" NULLS FIRST
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:   "folio_ticket",
          ^

[2025-06-21 12:29:22] [SQL EXECUTION ERROR] Tiempo: 0.03s
SQL:
SELECT
  "fecha_registro",
  "folio_ticket",
  "area_colaborador_asignado" AS "area"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND "area_colaborador_asignado" LIKE '%SERVIDORES%'
GROUP BY
  "fecha_registro",
  "area_colaborador_asignado"
ORDER BY
  "fecha_registro" NULLS FIRST
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:   "folio_ticket",
          ^

[2025-06-21 12:29:30] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  "fecha_registro",
  "folio_ticket",
  "area_colaborador_asignado" AS "area"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND "area_colaborador_asignado" LIKE '%SERVIDORES%'
GROUP BY
  "fecha_registro",
  "area_colaborador_asignado"
ORDER BY
  "fecha_registro" NULLS FIRST
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:   "folio_ticket",
          ^

[2025-06-21 12:29:43] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  "fecha_registro",
  "folio_ticket",
  "area_colaborador_asignado" AS "area"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND "area_colaborador_asignado" LIKE '%SERVIDORES%'
GROUP BY
  "fecha_registro",
  "area_colaborador_asignado"
ORDER BY
  "fecha_registro" NULLS FIRST
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:   "folio_ticket",
          ^

[2025-06-21 12:29:51] [SQL EXECUTION ERROR] Tiempo: 0.02s
SQL:
SELECT
  "fecha_registro",
  "folio_ticket",
  "area_colaborador_asignado" AS "area"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND "area_colaborador_asignado" LIKE '%SERVIDORES%'
GROUP BY
  "fecha_registro",
  "area_colaborador_asignado"
ORDER BY
  "fecha_registro" NULLS FIRST
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:   "folio_ticket",
          ^

[2025-06-21 12:29:59] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  "fecha_registro",
  "folio_ticket",
  "area_colaborador_asignado" AS "area"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND "area_colaborador_asignado" LIKE '%SERVIDORES%'
GROUP BY
  "fecha_registro",
  "area_colaborador_asignado"
ORDER BY
  "fecha_registro" NULLS FIRST
Error: la columna «ft_tickets_ia.folio_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:   "folio_ticket",
          ^

[2025-06-21 12:30:13] [SQL EXECUTION OK] Tiempo: 1.73s
SQL:
SELECT
  "fecha_registro",
  "anio_registro",
  "mes_registro",
  "fecha_cierre",
  "estatus_ticket",
  "folio_ticket",
  "sistema",
  "motivo_ticket",
  "motivo_cierre_ticket",
  "servicio_cierre_ticket",
  "centro_trabajo",
  "ciudad",
  "empresa",
  "unidad_negocio",
  "personal_reporta",
  "colaborador_asignado",
  "departamento_colaborador_asignado",
  "area_colaborador_asignado",
  "servicio",
  "tiempo_solucion_total",
  "tiempo_sla_servicio",
  "tiempo_atencion",
  "estatus_atencion"
FROM "ft_tickets_ia"
WHERE
  "area_colaborador_asignado" = 'Servidores' AND "estatus_ticket" <> 'CANCELADO'
ORDER BY
  "fecha_registro" DESC NULLS LAST
[2025-06-21 12:31:18] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  "colaborador_asignado",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  NOT "colaborador_asignado" IS NULL AND "estatus_ticket" <> 'CANCELADO'
GROUP BY
  "colaborador_asignado"
[2025-06-21 12:32:34] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  MAX("folio_ticket") AS "Folio Ticket"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
[2025-06-21 12:33:43] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-21 12:37:51] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
WITH "tickets_atendidos_por_dia" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_cierre") AS "dia",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_cierre") = 2025
  GROUP BY
    "dia"
), "tickets_registrados_por_dia" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_registro") AS "dia",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS "tickets_registrados"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
  GROUP BY
    "dia"
)
SELECT
  AVG("tickets_atendidos") AS "promedio_tickets_atendidos_por_dia",
  AVG("tickets_registrados") AS "promedio_tickets_registrados_por_dia"
FROM "tickets_atendidos_por_dia", "tickets_registrados_por_dia"
[2025-06-21 12:38:34] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
WITH "tickets_atendidos_por_dia" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_cierre") AS "dia",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_cierre") = 2025
  GROUP BY
    "dia"
), "tickets_registrados_por_dia" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_registro") AS "dia",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS "tickets_registrados"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
  GROUP BY
    "dia"
)
SELECT
  AVG("tickets_atendidos") AS "promedio_tickets_atendidos_por_dia",
  AVG("tickets_registrados") AS "promedio_tickets_registrados_por_dia"
FROM "tickets_atendidos_por_dia", "tickets_registrados_por_dia"
[2025-06-21 12:38:48] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
WITH "tickets_atendidos_por_dia" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_cierre") AS "dia",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_cierre") = 2025
  GROUP BY
    "dia"
), "tickets_registrados_por_dia" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_registro") AS "dia",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS "tickets_registrados"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
  GROUP BY
    "dia"
)
SELECT
  AVG("tickets_atendidos") AS "promedio_tickets_atendidos_por_dia",
  AVG("tickets_registrados") AS "promedio_tickets_registrados_por_dia"
FROM "tickets_atendidos_por_dia", "tickets_registrados_por_dia"
[2025-06-21 12:49:56] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-23 12:31:46] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*) AS "total_tickets"
FROM "ft_tickets_ia"
WHERE
  "fecha_registro" = CURRENT_DATE
[2025-06-23 12:32:48] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*) AS "tickets_en_proceso_fuera_de_tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-23 12:33:36] [SQL EXECUTION OK] Tiempo: 0.04s
SQL:
WITH "tickets_diarios" AS (
  SELECT
    EXTRACT(DAY FROM "fecha_registro") AS "dia",
    EXTRACT(YEAR FROM "fecha_registro") AS "año",
    COUNT("folio_ticket") AS "tickets_por_dia"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= CURRENT_DATE AND EXTRACT(YEAR FROM "fecha_registro") <= 2025
  GROUP BY
    EXTRACT(DAY FROM "fecha_registro"),
    EXTRACT(YEAR FROM "fecha_registro")
)
SELECT
  AVG("tickets_por_dia") AS "promedio_tickets_por_dia"
FROM "tickets_diarios"
[2025-06-23 12:34:40] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO'
    AND "fecha_cierre" IS NULL
    AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "tickets_fuera_tiempo",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) - COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO'
    AND "fecha_cierre" IS NULL
    AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "diferencia"
FROM "ft_tickets_ia"
[2025-06-23 12:49:24] [SQL EXECUTION OK] Tiempo: 0.09s
SQL:
SELECT
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO'
    AND "departamento_colaborador_asignado" = 'Centro de Atención a Usuarios') AS "tickets_en_proceso"
FROM "ft_tickets_ia"
[2025-06-23 12:49:57] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "area_colaborador_asignado" = 'centro de atencion a usuarios'
  AND "fecha_cierre" IS NULL
[2025-06-23 12:51:20] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
WITH "tickets_junio_2025" AS (
  SELECT
    COUNT(*) AS "tickets_registrados",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
    AND EXTRACT(MONTH FROM "fecha_registro") = 6
), "promedio_atendidos" AS (
  SELECT
    CAST(AVG("tickets_atendidos") AS REAL) AS "promedio_atendidos"
  FROM "tickets_junio_2025"
)
SELECT
  (
    CAST("promedio_atendidos"."promedio_atendidos" AS DOUBLE PRECISION) / "tickets_junio_2025"."tickets_registrados"
  ) * 100 AS "porcentaje_atendidos"
FROM "tickets_junio_2025"
JOIN "promedio_atendidos"
  ON TRUE
[2025-06-23 12:52:22] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  "servicio",
  MIN("folio_ticket") AS "ticket_abierto",
  MIN("fecha_registro") AS "fecha_registro"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO' AND "fecha_cierre" IS NULL
GROUP BY
  "servicio"
ORDER BY
  "fecha_registro" ASC NULLS FIRST
[2025-06-23 12:53:14] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
WITH "tickets_por_dia" AS (
  SELECT
    "fecha_registro" AS "fecha",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" <> 'CANCELADO') AS "tickets_registrados",
    COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    CAST(DATE_TRUNC('MONTH', "fecha_registro") AS DATE) = CAST(DATE_TRUNC('MONTH', CURRENT_DATE) AS DATE)
  GROUP BY
    "fecha_registro"
), "tickets_por_dia_agrupados" AS (
  SELECT
    DATE_TRUNC('DAY', "fecha") AS "fecha",
    SUM("tickets_registrados") AS "tickets_registrados_total",
    SUM("tickets_atendidos") AS "tickets_atendidos_total"
  FROM "tickets_por_dia"
  GROUP BY
    "fecha"
)
SELECT
  "fecha",
  "tickets_registrados_total",
  "tickets_atendidos_total"
FROM "tickets_por_dia_agrupados"
ORDER BY
  "fecha" NULLS FIRST
[2025-06-23 13:06:34] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
[2025-06-23 13:28:20] [SQL EXECUTION ERROR] Tiempo: 0.05s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  CASE
    WHEN "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
    THEN 'En Proceso'
    WHEN "estatus_atencion" = 'FUERA DE TIEMPO'
    THEN 'Fuera de Tiempo'
    ELSE 'Otro Estado'
  END AS "Estatus"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" IN ('EN PROCESO', 'FUERA DE TIEMPO')
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
Error: la columna «ft_tickets_ia.estatus_ticket» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 5:     WHEN "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" ...
                 ^

[2025-06-23 13:43:28] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-23 14:39:35] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  COUNT(*) FILTER(WHERE
    NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL) AS "Tickets Abiertos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST
[2025-06-23 15:00:56] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) AS "Tickets Fuera de Tiempo Abiertos"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
  AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-23 16:09:22] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  DATE_TRUNC('DAY', "fecha_cierre") AS "fecha_atencion",
  COUNT(*) FILTER(WHERE
    "fecha_cierre" >= DATE_TRUNC('MONTH', CURRENT_DATE)
    AND "fecha_cierre" < DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL '1 MONTH') AS "tickets_atendidos"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
GROUP BY
  "fecha_atencion"
ORDER BY
  "fecha_atencion" NULLS FIRST
[2025-06-23 16:10:34] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  DATE_TRUNC('DAY', "fecha_registro") AS "fecha",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso"
FROM "ft_tickets_ia"
WHERE
  "fecha_registro" >= DATE_TRUNC('MONTH', CURRENT_DATE)
  AND "fecha_registro" < DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL '1 MONTH'
GROUP BY
  1
ORDER BY
  1 NULLS FIRST
[2025-06-23 17:00:39] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*) AS "tickets_atendidos"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = 2025
  AND "estatus_ticket" = 'ATENDIDO'
  AND (
    NOT "fecha_cierre" IS NULL OR NOT "estatus_ticket" IN ('CANCELADO')
  )
[2025-06-23 17:15:34] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  DATE_TRUNC('DAY', "fecha_registro") AS "fecha",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO') AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'FUERA DE TIEMPO') AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = 2025 AND "mes_registro" BETWEEN 1 AND 12
GROUP BY
  "fecha"
[2025-06-23 17:49:46] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  DATE_TRUNC('DAY', "fecha_registro") AS "fecha",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'ATENDIDO') AS "tickets_atendidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
WHERE
  "anio_registro" = DATE_PART('YEAR', CURRENT_DATE)
GROUP BY
  DATE_TRUNC('DAY', "fecha_registro")
ORDER BY
  DATE_TRUNC('DAY', "fecha_registro") NULLS FIRST
[2025-06-23 17:51:57] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) AS "Tickets En Proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-24 09:18:04] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND "fecha_registro" <= CURRENT_DATE
[2025-06-24 09:19:18] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
[2025-06-24 09:20:46] [SQL EXECUTION ERROR] Tiempo: 0.06s
SQL:
SELECT
  CASE
    WHEN DIV(EXTRACT(EPOCH FROM "fecha_registro" - INTERVAL '15 DAYS'), 15) = 0
    THEN '15-30 días'
    WHEN DIV(EXTRACT(EPOCH FROM "fecha_registro" - INTERVAL '30 DAYS'), 15) = 0
    THEN '30-45 días'
    ELSE 'Más de 45 días'
  END AS "intervalo_dias",
  COUNT(*) FILTER(WHERE
    NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL) AS "tickets_abiertos"
FROM "ft_tickets_ia"
GROUP BY
  INTERVAL '15 DAYS'
ORDER BY
  "intervalo_dias" NULLS FIRST
Error: la columna «ft_tickets_ia.fecha_registro» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:     WHEN DIV(EXTRACT(EPOCH FROM "fecha_registro" - INTERVAL ...
                                        ^

[2025-06-24 10:25:12] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
SELECT
  CASE
    WHEN DIV(EXTRACT(EPOCH FROM "fecha_registro" - INTERVAL '15 DAYS'), 15) = 0
    THEN '15-30 días'
    WHEN DIV(EXTRACT(EPOCH FROM "fecha_registro" - INTERVAL '30 DAYS'), 15) = 0
    THEN '30-45 días'
    ELSE 'Más de 45 días'
  END AS "intervalo_dias",
  COUNT(*) FILTER(WHERE
    NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL) AS "tickets_abiertos"
FROM "ft_tickets_ia"
GROUP BY
  INTERVAL '15 DAYS'
ORDER BY
  "intervalo_dias" NULLS FIRST
Error: la columna «ft_tickets_ia.fecha_registro» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 3:     WHEN DIV(EXTRACT(EPOCH FROM "fecha_registro" - INTERVAL ...
                                        ^

[2025-06-24 10:37:42] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
WITH "tickets_abiertos_rangos" AS (
  SELECT
    CASE
      WHEN (
        CURRENT_DATE - "fecha_registro"
      ) <= 15
      THEN '0–15 días'
      WHEN (
        CURRENT_DATE - "fecha_registro"
      ) <= 30
      THEN '16–30 días'
      WHEN (
        CURRENT_DATE - "fecha_registro"
      ) <= 45
      THEN '31–45 días'
      ELSE 'Más de 45 días'
    END AS "rango_abierto",
    "folio_ticket"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_cierre" IS NULL AND NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
)
SELECT
  "rango_abierto",
  COUNT(*)
FROM "tickets_abiertos_rangos"
GROUP BY
  "rango_abierto"
ORDER BY
  "rango_abierto" NULLS FIRST
[2025-06-24 10:39:50] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO' /* Excluimos tickets cancelados */
  AND NOT "fecha_cierre" IS NULL /* Excluimos tickets sin cierre */
  AND "colaborador_asignado" ILIKE '%DANIEL%IBARRA%'
[2025-06-24 10:40:26] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  'Centro de atención a usuarios' AS "Departamento",
  NULL AS "Área",
  CAST(COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS DECIMAL) AS "Tickets En Proceso"
FROM "ft_tickets_ia"
WHERE
  "departamento_colaborador_asignado" = 'Centro de atención a usuarios'
GROUP BY
  1,
  2
[2025-06-24 10:45:49] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  COUNT(*) AS "Tickets En Proceso"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "area_colaborador_asignado" ILIKE '%CENTRO%DE%ATENCION%A%USUARIOS%'
[2025-06-24 10:56:36] [SQL EXECUTION OK] Tiempo: 0.21s
SQL:
SELECT
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO'
    AND "departamento_colaborador_asignado" ILIKE '%SOPORTE%') AS "Tickets en proceso en Soporte"
FROM "ft_tickets_ia"
[2025-06-24 11:08:59] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "departamento_colaborador_asignado" ILIKE '%SOPORTE%'
  AND "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
[2025-06-24 11:24:05] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "departamento_colaborador_asignado" ILIKE '%SOPORTE%'
[2025-06-24 11:25:32] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
  AND "area_colaborador_asignado" ILIKE '%SOPORTE%'
[2025-06-24 11:29:14] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*) FILTER(WHERE
    "area_colaborador_asignado" ILIKE '%SOPORTE%') AS "tickets_en_proceso",
  COUNT(*) FILTER(WHERE
    "area_colaborador_asignado" ILIKE '%SOPORTE%'
    AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-24 12:11:54] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  "folio_ticket" AS "Folio",
  "fecha_registro" AS "Fecha de Registro",
  "estatus_ticket" AS "Estatus",
  "estatus_atencion" AS "Estatus de Atención"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-24 12:13:32] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  CAST((
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO'
      AND "fecha_cierre" IS NULL
      AND "estatus_atencion" = 'FUERA DE TIEMPO') AS DECIMAL) / CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS DECIMAL) * 100
  ) AS DECIMAL(5, 2)) AS "porcentaje_tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
[2025-06-24 12:14:23] [SQL EXECUTION OK] Tiempo: 0.06s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-24 12:22:34] [SQL EXECUTION OK] Tiempo: 0.11s
SQL:
SELECT
  COUNT(*) AS "tickets_abiertos_junio"
FROM "ft_tickets_ia"
WHERE
  "mes_registro" = 6
  AND NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
[2025-06-24 12:24:05] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  "mes_registro",
  "anio_registro",
  COUNT(*) AS "tickets_abiertos"
FROM "ft_tickets_ia"
WHERE
  "mes_registro" = 6
  AND "anio_registro" = EXTRACT(YEAR FROM CURRENT_DATE)
  AND NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
GROUP BY
  "mes_registro",
  "anio_registro"
[2025-06-24 12:47:31] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  EXTRACT(MONTH FROM "fecha_registro") AS "Mes",
  EXTRACT(YEAR FROM "fecha_registro") AS "Año",
  COUNT(*) AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado",
  EXTRACT(MONTH FROM "fecha_registro"),
  EXTRACT(YEAR FROM "fecha_registro")
ORDER BY
  EXTRACT(YEAR FROM "fecha_registro") NULLS FIRST,
  EXTRACT(MONTH FROM "fecha_registro") NULLS FIRST
[2025-06-24 13:06:18] [SQL EXECUTION OK] Tiempo: 0.32s
SQL:
SELECT
  "folio_ticket",
  "tiempo_solucion_total"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" IN ('EN PROCESO', 'ATENDIDO') /* Asegurar que solo se consideren tickets en estado de atención */
ORDER BY
  "tiempo_solucion_total" DESC NULLS LAST
LIMIT 1
[2025-06-24 16:06:23] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
SELECT
  CAST((
    CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO'
      AND "fecha_cierre" IS NULL
      AND "estatus_atencion" = 'FUERA DE TIEMPO') AS DECIMAL) / CAST(COUNT(*) FILTER(WHERE
      "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS DECIMAL) * 100
  ) AS DECIMAL(5, 2)) AS "porcentaje_tickets_fuera_de_tiempo"
FROM "ft_tickets_ia"
[2025-06-24 16:09:56] [SQL EXECUTION OK] Tiempo: 0.08s
SQL:
SELECT
  EXTRACT(YEAR FROM "tks"."fecha_registro") AS "anio",
  EXTRACT(MONTH FROM "tks"."fecha_registro") AS "mes",
  "departamento_colaborador_asignado",
  COUNT(*) FILTER(WHERE
    "tks"."estatus_ticket" <> 'CANCELADO') AS "tickets_registrados",
  COUNT(*) FILTER(WHERE
    "tks"."estatus_ticket" = 'ATENDIDO'
    OR (
      NOT "tks"."fecha_cierre" IS NULL AND NOT "tks"."estatus_ticket" IN ('CANCELADO')
    )) AS "tickets_atendidos",
  COUNT(*) FILTER(WHERE
    NOT "tks"."estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
    AND "tks"."fecha_cierre" IS NULL) AS "tickets_abiertos",
  COUNT(*) FILTER(WHERE
    "tks"."estatus_ticket" = 'EN PROCESO' AND "tks"."fecha_cierre" IS NULL) AS "tickets_proceso",
  COUNT(*) FILTER(WHERE
    "tks"."estatus_ticket" = 'EN PROCESO'
    AND "tks"."fecha_cierre" IS NULL
    AND "estatus_atencion" = 'FUERA DE TIEMPO') AS "tickets_fuera_tiempo"
FROM "ft_tickets_ia" AS "tks"
WHERE
  EXTRACT(YEAR FROM "tks"."fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  AND EXTRACT(MONTH FROM "tks"."fecha_registro") >= EXTRACT(MONTH FROM DATE_TRUNC('MONTH', CURRENT_DATE))
  AND EXTRACT(MONTH FROM "tks"."fecha_registro") <= EXTRACT(MONTH FROM DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL '1 MONTH')
GROUP BY
  EXTRACT(YEAR FROM "tks"."fecha_registro"),
  EXTRACT(MONTH FROM "tks"."fecha_registro"),
  "departamento_colaborador_asignado"
ORDER BY
  EXTRACT(YEAR FROM "tks"."fecha_registro") NULLS FIRST,
  EXTRACT(MONTH FROM "tks"."fecha_registro") NULLS FIRST
[2025-06-24 16:20:22] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
WITH "tickets_por_departamento_y_mes" AS (
  SELECT
    EXTRACT(MONTH FROM "fecha_registro") AS "mes",
    EXTRACT(YEAR FROM "fecha_registro") AS "año",
    "departamento_colaborador_asignado" AS "departamento",
    COUNT("folio_ticket") AS "tickets_por_mes"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = 2025
  GROUP BY
    1,
    2,
    3
)
SELECT
  "mes" AS "mes",
  "año" AS "año",
  "departamento" AS "departamento",
  SUM("tickets_por_mes") AS "tickets_totales"
FROM "tickets_por_departamento_y_mes"
GROUP BY
  1,
  2,
  3
ORDER BY
  1 NULLS FIRST,
  2 NULLS FIRST,
  3 NULLS FIRST
[2025-06-24 16:21:42] [SQL EXECUTION OK] Tiempo: 0.15s
SQL:
WITH "tickets_fuera_de_tiempo" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" = 'ATENDIDO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
  GROUP BY
    "colaborador_asignado"
), "total_tickets_atendidos" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) AS "total_tickets_atendidos"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" = 'ATENDIDO'
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "r"."colaborador_asignado",
  "r"."tickets_fuera_de_tiempo",
  "r"."total_tickets_atendidos",
  "r"."porcentaje_fuera_de_tiempo"
FROM (
  SELECT
    "tft"."colaborador_asignado",
    "tft"."tickets_fuera_de_tiempo",
    "tta"."total_tickets_atendidos",
    (
      CAST("tft"."tickets_fuera_de_tiempo" AS DOUBLE PRECISION) / "tta"."total_tickets_atendidos"
    ) * 100 AS "porcentaje_fuera_de_tiempo"
  FROM "tickets_fuera_de_tiempo" AS "tft"
  JOIN "total_tickets_atendidos" AS "tta"
    ON "tft"."colaborador_asignado" = "tta"."colaborador_asignado"
) AS "r"
ORDER BY
  "r"."porcentaje_fuera_de_tiempo" DESC NULLS LAST
[2025-06-24 16:23:00] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "tickets_fuera_de_tiempo" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" = 'ATENDIDO' AND "tiempo_atencion" > "tiempo_sla_servicio"
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "r"."colaborador_asignado",
  COUNT(*) AS "tickets_generados",
  COUNT(*) FILTER(WHERE
    "t"."tickets_fuera_de_tiempo" > 0) AS "tickets_fuera_de_tiempo",
  ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC NULLS LAST) AS "ranking"
FROM "ft_tickets_ia"
JOIN "tickets_fuera_de_tiempo" AS "t"
  ON "ft_tickets_ia"."colaborador_asignado" = "t"."colaborador_asignado"
GROUP BY
  "colaborador_asignado"
ORDER BY
  "ranking" NULLS FIRST
Error: falta una entrada para la tabla «r» en la cláusula FROM
LINE 12:   "r"."colaborador_asignado",
           ^

[2025-06-24 16:26:32] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
WITH "tickets_fuera_de_tiempo" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_atencion" = 'FUERA DE TIEMPO'
  GROUP BY
    "colaborador_asignado"
), "total_tickets" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "r"."colaborador_asignado",
  "r"."tickets_fuera_de_tiempo",
  "r"."total_tickets",
  "r"."porcentaje_fuera_de_tiempo"
FROM (
  SELECT
    "tft"."colaborador_asignado",
    "tft"."tickets_fuera_de_tiempo",
    "tt"."total_tickets",
    (
      CAST("tft"."tickets_fuera_de_tiempo" AS DOUBLE PRECISION) / "tt"."total_tickets"
    ) * 100 AS "porcentaje_fuera_de_tiempo"
  FROM "tickets_fuera_de_tiempo" AS "tft"
  JOIN "total_tickets" AS "tt"
    ON "tft"."colaborador_asignado" = "tt"."colaborador_asignado"
  ORDER BY
    "porcentaje_fuera_de_tiempo" DESC NULLS LAST
) AS "r"
ORDER BY
  "porcentaje_fuera_de_tiempo" DESC NULLS LAST
LIMIT 10
[2025-06-24 16:29:26] [SQL EXECUTION ERROR] Tiempo: 0.04s
SQL:
WITH "colaboradores_fuera_de_tiempo" AS (
  SELECT
    "colaborador_asignado",
    COUNT(*) AS "tickets_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" = 'ATENDIDO' AND "estatus_atencion" = 'FUERA DE TIEMPO'
  GROUP BY
    "colaborador_asignado"
)
SELECT
  "r"."colaborador_asignado",
  COUNT(*) AS "tickets_reportados",
  "r"."tickets_fuera_de_tiempo"
FROM "ft_tickets_ia" AS "r"
JOIN "colaboradores_fuera_de_tiempo" AS "cft"
  ON "r"."colaborador_asignado" = "cft"."colaborador_asignado"
GROUP BY
  "r"."colaborador_asignado"
ORDER BY
  "tickets_fuera_de_tiempo" DESC NULLS LAST,
  "tickets_reportados" DESC NULLS LAST
Error: no existe la columna r.tickets_fuera_de_tiempo
LINE 14:   "r"."tickets_fuera_de_tiempo"
           ^
HINT:  Probablemente quiera hacer referencia a la columna «cft.tickets_fuera_de_tiempo».

[2025-06-24 16:30:35] [SQL EXECUTION OK] Tiempo: 0.05s
SQL:
WITH "tickets_fuera_de_tiempo" AS (
  SELECT
    "personal_reporta",
    COUNT(*) AS "tickets_atendidos_fuera_de_tiempo"
  FROM "ft_tickets_ia"
  WHERE
    "estatus_ticket" = 'ATENDIDO' AND "tiempo_atencion" > "tiempo_sla_servicio"
  GROUP BY
    "personal_reporta"
)
SELECT
  "personal_reporta",
  "tickets_atendidos_fuera_de_tiempo"
FROM "tickets_fuera_de_tiempo"
ORDER BY
  "tickets_atendidos_fuera_de_tiempo" DESC NULLS LAST
LIMIT 8
[2025-06-24 16:32:09] [SQL EXECUTION OK] Tiempo: 0.12s
SQL:
SELECT
  "ft_tickets_ia"."folio_ticket" AS "Folio Ticket",
  "ft_tickets_ia"."estatus_ticket" AS "Estatus Ticket",
  "ft_tickets_ia"."estatus_atencion" AS "Estatus Atención",
  "ft_tickets_ia"."departamento_colaborador_asignado" AS "Departamento"
FROM "ft_tickets_ia"
WHERE
  "ft_tickets_ia"."estatus_ticket" = 'EN PROCESO'
  AND "ft_tickets_ia"."estatus_atencion" = 'FUERA DE TIEMPO'
  AND "ft_tickets_ia"."departamento_colaborador_asignado" ILIKE '%CONSTRUCCIÓN%'
ORDER BY
  "ft_tickets_ia"."folio_ticket" NULLS FIRST
[2025-06-24 16:35:47] [SQL EXECUTION OK] Tiempo: 0.18s
SQL:
SELECT
  "folio_ticket",
  "fecha_registro",
  "anio_registro",
  "mes_registro",
  "estatus_ticket",
  "servicio",
  "tiempo_atencion",
  "estatus_atencion"
FROM "ft_tickets_ia"
WHERE
  "unidad_negocio" ILIKE 'Construcción'
  AND "estatus_ticket" = 'EN PROCESO'
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-24 16:57:12] [SQL EXECUTION OK] Tiempo: 0.16s
SQL:
SELECT
  "folio_ticket",
  "fecha_registro",
  "anio_registro",
  "mes_registro",
  "estatus_ticket",
  "servicio",
  "tiempo_atencion",
  "estatus_atencion"
FROM "ft_tickets_ia"
WHERE
  "unidad_negocio" ILIKE 'Construcción'
  AND "estatus_ticket" = 'EN PROCESO'
  AND "estatus_atencion" = 'FUERA DE TIEMPO'
[2025-06-25 09:46:16] [SQL EXECUTION OK] Tiempo: 0.14s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL
[2025-06-25 10:00:23] [SQL EXECUTION ERROR] Tiempo: 0.64s
SQL:
WITH "tickets_por_area_departamento" AS (
  SELECT
    "departamento_colaborador_asignado" AS "departamento",
    "area_colaborador_asignado" AS "area",
    COUNT(*) AS "total_tickets"
  FROM "ft_tickets_ia"
  WHERE
    "fecha_registro" >= DATE_TRUNC('YEAR', CURRENT_DATE)
  GROUP BY
    "departamento_colaborador_asignado",
    "area_colaborador_asignado"
)
SELECT
  "departamento",
  "area",
  "total_tickets"
FROM "tickets_por_area_departamento"
GROUP BY
  "departamento",
  "area"
LIMIT 1
Error: la columna «tickets_por_area_departamento.total_tickets» debe aparecer en la cláusula GROUP BY o ser usada en una función de agregación
LINE 16:   "total_tickets"
           ^

[2025-06-25 10:01:02] [SQL EXECUTION OK] Tiempo: 0.28s
SQL:
WITH "tickets_por_departamento_y_area" AS (
  SELECT
    "departamento_colaborador_asignado" AS "departamento",
    "area_colaborador_asignado" AS "area",
    COUNT(*) AS "tickets"
  FROM "ft_tickets_ia"
  WHERE
    EXTRACT(YEAR FROM "fecha_registro") = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY
    "departamento_colaborador_asignado",
    "area_colaborador_asignado"
)
SELECT
  "departamento",
  "area",
  "tickets",
  ROW_NUMBER() OVER (ORDER BY "tickets" DESC NULLS LAST) AS "ranking"
FROM "tickets_por_departamento_y_area"
WHERE
  "tickets" BETWEEN 3 AND 8
[2025-06-25 11:29:42] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO') AND "fecha_cierre" IS NULL
[2025-06-25 11:36:11] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  COUNT(*) AS "Tickets Abiertos"
FROM "ft_tickets_ia"
WHERE
  NOT "estatus_ticket" IN ('ATENDIDO', 'CANCELADO')
  AND "fecha_cierre" IS NULL
  AND "area_colaborador_asignado" ILIKE '%SERVIDORES%'
[2025-06-25 11:36:29] [SQL EXECUTION OK] Tiempo: 0.10s
SQL:
SELECT
  "unidad_negocio",
  COUNT(*) AS "tickets_registrados"
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" <> 'CANCELADO'
  AND DATE_TRUNC('WEEK', "fecha_registro") = DATE_TRUNC('WEEK', CURRENT_DATE)
GROUP BY
  "unidad_negocio"
ORDER BY
  "tickets_registrados" DESC NULLS LAST
LIMIT 10
[2025-06-25 12:12:35] [SQL EXECUTION OK] Tiempo: 0.19s
SQL:
SELECT
  "departamento_colaborador_asignado" AS "Departamento",
  "area_colaborador_asignado" AS "Área",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "fecha_cierre" IS NULL) AS "Tickets En Proceso",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'ATENDIDO' AND NOT "fecha_cierre" IS NULL) AS "Tickets Atendidos",
  COUNT(*) FILTER(WHERE
    "estatus_ticket" = 'EN PROCESO' AND "tiempo_atencion" > "tiempo_sla_servicio") AS "Tickets Fuera de Tiempo"
FROM "ft_tickets_ia"
GROUP BY
  "departamento_colaborador_asignado",
  "area_colaborador_asignado"
ORDER BY
  "departamento_colaborador_asignado" NULLS FIRST,
  "area_colaborador_asignado" NULLS FIRST
[2025-06-25 13:00:57] [SQL EXECUTION OK] Tiempo: 0.13s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "personal_reporta" ILIKE '%JUAN JOSÉ MARTINEZ LOPEZ%'
  AND "estatus_ticket" = 'EN PROCESO'
  AND "fecha_cierre" IS NULL
[2025-06-25 13:01:42] [SQL EXECUTION OK] Tiempo: 0.20s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "personal_reporta" ILIKE '%JUAN JOSÉ MARTÍNEZ LÓPEZ%'
[2025-06-25 13:02:11] [SQL EXECUTION OK] Tiempo: 0.17s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "personal_reporta" ILIKE '%JUAN%MARTINEZ%'
[2025-06-25 13:02:54] [SQL EXECUTION OK] Tiempo: 0.07s
SQL:
SELECT
  COUNT(*)
FROM "ft_tickets_ia"
WHERE
  "estatus_ticket" = 'EN PROCESO'
  AND "departamento_colaborador_asignado" ILIKE '%SERVIDORES%'
